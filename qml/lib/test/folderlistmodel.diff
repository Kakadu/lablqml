diff --git a/src/imports/folderlistmodel/fileinfothread.cpp b/src/imports/folderlistmodel/fileinfothread.cpp
index 64a4b02..3d39fda 100644
--- a/src/imports/folderlistmodel/fileinfothread.cpp
+++ b/src/imports/folderlistmodel/fileinfothread.cpp
@@ -58,6 +58,7 @@ FileInfoThread::FileInfoThread(QObject *parent)
       showDirs(true),
       showDirsFirst(false),
       showDotDot(false),
+      showHidden(false),
       showOnlyReadable(false)
 {
 #ifndef QT_NO_FILESYSTEMWATCHER
@@ -150,6 +151,14 @@ void FileInfoThread::setShowDirs(bool showFolders)
     condition.wakeAll();
 }
 
+void FileInfoThread::setShowFiles(bool on)
+{
+    QMutexLocker locker(&mutex);
+    showFiles = on;
+    folderUpdate = true;
+    condition.wakeAll();
+}
+
 void FileInfoThread::setShowDirsFirst(bool show)
 {
     QMutexLocker locker(&mutex);
@@ -174,6 +183,14 @@ void FileInfoThread::setShowOnlyReadable(bool on)
     condition.wakeAll();
 }
 
+void FileInfoThread::setShowHidden(bool on) {
+    QMutexLocker locker(&mutex);
+    showHidden = on;
+    folderUpdate = true;
+    condition.wakeAll();
+
+}
+
 #ifndef QT_NO_FILESYSTEMWATCHER
 void FileInfoThread::updateFile(const QString &path)
 {
@@ -212,13 +229,17 @@ void FileInfoThread::run()
 void FileInfoThread::getFileInfos(const QString &path)
 {
     QDir::Filters filter;
-    filter = QDir::Files | QDir::NoDot | QDir::CaseSensitive;
+    filter = QDir::NoDot | QDir::CaseSensitive;
+    if (showFiles)
+        filter |= QDir::Files;
     if (showDirs)
         filter = filter | QDir::AllDirs | QDir::Drives;
     if ((path == rootPath) || !showDotDot)
         filter = filter | QDir::NoDotDot;
     if (showOnlyReadable)
         filter = filter | QDir::Readable;
+    if (showHidden)
+        filter |= QDir::Hidden;
     if (showDirsFirst)
         sortFlags = sortFlags | QDir::DirsFirst;
 
diff --git a/src/imports/folderlistmodel/fileinfothread_p.h b/src/imports/folderlistmodel/fileinfothread_p.h
index f9340ca..1265381 100644
--- a/src/imports/folderlistmodel/fileinfothread_p.h
+++ b/src/imports/folderlistmodel/fileinfothread_p.h
@@ -71,9 +71,11 @@ public:
     void setSortFlags(QDir::SortFlags flags);
     void setNameFilters(const QStringList & nameFilters);
     void setShowDirs(bool showFolders);
+    void setShowFiles(bool on);
     void setShowDirsFirst(bool show);
     void setShowDotDot(bool on);
     void setShowOnlyReadable(bool on);
+    void setShowHidden(bool on);
 
 public Q_SLOTS:
 #ifndef QT_NO_FILESYSTEMWATCHER
@@ -103,8 +105,10 @@ private:
     bool folderUpdate;
     bool sortUpdate;
     bool showDirs;
+    bool showFiles;
     bool showDirsFirst;
     bool showDotDot;
+    bool showHidden;
     bool showOnlyReadable;
 };
 
diff --git a/src/imports/folderlistmodel/qquickfolderlistmodel.cpp b/src/imports/folderlistmodel/qquickfolderlistmodel.cpp
index 421e215..2503d09 100644
--- a/src/imports/folderlistmodel/qquickfolderlistmodel.cpp
+++ b/src/imports/folderlistmodel/qquickfolderlistmodel.cpp
@@ -71,9 +71,11 @@ public:
     QStringList nameFilters;
     bool sortReversed;
     bool showDirs;
+    bool showFiles;
     bool showDirsFirst;
     bool showDots;
     bool showOnlyReadable;
+    bool showHidden;
 
     ~QQuickFolderListModelPrivate() {}
     void init();
@@ -625,6 +627,27 @@ void  QQuickFolderListModel::setShowDirs(bool on)
 }
 
 /*!
+    \qmlproperty bool FolderListModel::showFiles
+
+    If true, files are included in the model.
+
+    By default, this property is true.
+*/
+bool QQuickFolderListModel::showFiles() const
+{
+    Q_D(const QQuickFolderListModel);
+    return d->showFiles;
+}
+
+void  QQuickFolderListModel::setShowFiles(bool on)
+{
+    Q_D(QQuickFolderListModel);
+
+    d->fileInfoThread.setShowFiles(on);
+    d->showFiles = on;
+}
+
+/*!
     \qmlproperty bool FolderListModel::showDirsFirst
 
     If true, if directories are included in the model they will
@@ -697,6 +720,28 @@ void QQuickFolderListModel::setShowOnlyReadable(bool on)
         d->fileInfoThread.setShowOnlyReadable(on);
     }
 }
+/*!
+    \qmlproperty bool FolderListModel::showHidden
+
+    If true, hidden files and directories will be shown.
+
+    By default, this property is false.
+
+    \sa showDirs
+*/
+bool QQuickFolderListModel::showHidden() const
+{
+    Q_D(const QQuickFolderListModel);
+    return d->showHidden;
+}
+
+void QQuickFolderListModel::setShowHidden(bool on) {
+    Q_D(QQuickFolderListModel);
+
+    if (on != d->showHidden) {
+        d->fileInfoThread.setShowHidden(on);
+    }
+}
 
 /*!
     \qmlmethod QVariant QQuickFolderListModel::get(int idx, const QString &property) const
diff --git a/src/imports/folderlistmodel/qquickfolderlistmodel.h b/src/imports/folderlistmodel/qquickfolderlistmodel.h
index 03cb24d..2b97efd 100644
--- a/src/imports/folderlistmodel/qquickfolderlistmodel.h
+++ b/src/imports/folderlistmodel/qquickfolderlistmodel.h
@@ -70,9 +70,11 @@ class QQuickFolderListModel : public QAbstractListModel, public QQmlParserStatus
     Q_PROPERTY(SortField sortField READ sortField WRITE setSortField)
     Q_PROPERTY(bool sortReversed READ sortReversed WRITE setSortReversed)
     Q_PROPERTY(bool showDirs READ showDirs WRITE setShowDirs)
+    Q_PROPERTY(bool showFiles READ showFiles WRITE setShowFiles)
     Q_PROPERTY(bool showDirsFirst READ showDirsFirst WRITE setShowDirsFirst)
     Q_PROPERTY(bool showDotAndDotDot READ showDotAndDotDot WRITE setShowDotAndDotDot)
     Q_PROPERTY(bool showOnlyReadable READ showOnlyReadable WRITE setShowOnlyReadable)
+    Q_PROPERTY(bool showHidden READ showHidden WRITE setShowHidden)
     Q_PROPERTY(int count READ count NOTIFY rowCountChanged)
 //![class props]
 
@@ -123,12 +125,17 @@ public:
 
     bool showDirs() const;
     void setShowDirs(bool showDirs);
+    bool showFiles() const;
+    void setShowFiles(bool showDirs);
+
     bool showDirsFirst() const;
     void setShowDirsFirst(bool showDirsFirst);
     bool showDotAndDotDot() const;
     void setShowDotAndDotDot(bool on);
     bool showOnlyReadable() const;
     void setShowOnlyReadable(bool on);
+    bool showHidden() const;
+    void setShowHidden(bool on);
 //![prop funcs]
 
     Q_INVOKABLE bool isFolder(int index) const;
