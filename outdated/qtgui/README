====================================================
My thoughts about which bindings for QtGui should be. I paused developing of this project and I'm focused now on QtQuick. See `../qml/` for details.

File `build.ml` is a script for pseudo-autobuild.
You can download and compile lablqt automatically (if all depends are installed) using these commands.
Before building be sure that you have exported environment variable $QT5 to tell generator where 
libraries ($QT5/lib) and include files ($QT5/include) are located.
    #!/bin/sh
    #getting git-readonly
    git clone git://github.com/Kakadu/lablqt.git --depth=1
    cd lablqt
    ocaml build.ml

Repository contents:
./moc            --- helper utility `mocml` which reads input API and 
                     creates C++ class which calls proper OCaml functions.
                     I've not decided how to use it in this project
./simple_signals --- hand-written bindings (only proof-of-concept)
./test_gen       --- environment for compiling bindings for QtGui from generated code
./test_gen/test  --- application to test generated bindings
./xml/main.ml    --- binding generator from XML input
./xml/xmltool.ml --- a tool for filtering XML API

Main XML file is `qt5-gui.xml`. It was generated by qt-jambi's generator.
https://github.com/Kakadu/lablqt/wiki/Generating-API-using-Qtjambi%27s-generator.

XML file are simplified before generation, for example, by script `./qt5-minimal.sh`. After that
new XML file `qt5-minimal.xml` is used by `build.ml` to generate API.
aaa.xml is XML API representation of QtCore and QtGui namespaces in Qt 4.7.3 (Debian testing).

I use thie environment to compile my code:
generator:
    core 109.08.00
    tyxml to parse XML files
    ocamlgraph
    tarjangraph (https://github.com/Kakadu/tarjan) for searching cycles in a graph (Tarjan's algorithm)
mocml:
    ocaml-syck to parse yaml input files

I'll ge glad to see any feedback about using Qt and OCaml together.
Ideas about connecting QML and OCaml also will be appreciated.



