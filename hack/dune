(env
 (dev
  (flags
   (:standard -warn-error -A -w -32))))

(copy_files ui/Root.qml)

(library
 (name mystubs_dune_hack)
 (modules)
 (foreign_stubs
  (language cxx)
  (names Singleton1_c moc_Singleton1_c proj2_qmltyperegistrations)
  (flags
   ((:include %{project_root}/config/c_flags.sexp)
    -fPIC
    -std=c++11
    -I.
    -O3)))
 (install_c_headers Singleton1))

(executable
 (name program)
 (libraries lablqml threads mystubs_dune_hack)
 (modules Program MyControls)
 (flags
  (:standard -w -33-27))
 (preprocess
  (per_module
   ((pps lablqml.ppx)
    MyControls)))
 (foreign_stubs
  (language cxx)
  (names qrc_resources)
  (flags
   ((:include %{project_root}/config/c_flags.sexp)
    -fPIC
    -std=c++11
    -O3)))
 (link_flags
  (-ccopt
   -Wl,-no-as-needed
   -ccopt
   -fPIC
   -cclib
   -lstdc++
   -cclib
   -llablqml_stubs
   -cclib
   hack/proj2_qmltyperegistrations.o
   (:include %{project_root}/config/ocaml_qt_libs.sexp))))

(rule
 (targets proj2_qmltyperegistrations.cpp)
 (deps proj2_metatypes.json)
 (action
  (run
   qmltyperegistrar
   --generate-qmltypes=proj2.qmltypes
   --import-name=com.mycompany.qmlcomponents
   --major-version=1
   --minor-version=0
   --foreign-types=/opt/qt515/lib/metatypes/qt5quick_metatypes.json,/opt/qt515/lib/metatypes/qt5gui_metatypes.json,/opt/qt515/lib/metatypes/qt5qmlmodels_metatypes.json,/opt/qt515/lib/metatypes/qt5qml_metatypes.json,/opt/qt515/lib/metatypes/qt5network_metatypes.json,/opt/qt515/lib/metatypes/qt5core_metatypes.json
   %{deps}
   -o
   %{targets})))

(rule
 (targets proj2_metatypes.json)
 (deps moc_Singleton1_c.cpp.json)
 (action
  (run moc -I/opt/qt515/include --collect-json %{deps} -o %{targets})))

(rule
 (targets moc_Singleton1_c.cpp moc_Singleton1_c.cpp.json)
 (deps Singleton1.h)
 (action
  (run
   moc
   -I/opt/qt515/include
   --output-json
   %{deps}
   -o
   moc_Singleton1_c.cpp)))

(rule
 (targets Singleton1_c.cpp Singleton1.h)
 (deps MyControls.ml)
 (action
  (run %{project_root}/ppx/pp/pp_qt.exe -ext cpp %{deps})))

(rule
 (targets qrc_resources.cpp)
 (deps src/resources.qrc ui/Root.qml)
 ; it will be great to have hack to access head of the dependecies (like in Makefile)
 (action
  (run rcc -name resources src/resources.qrc -o %{targets})))

(rule
 (targets c_flags.sexp ocaml_qt_libs.sexp c_library_flags.sexp)
 (deps config/discover.exe)
 (action
  (run config/discover.exe)))
