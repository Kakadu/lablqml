<code >
    <namespace name="Qt">
        <enum name="Qt::ShortcutContext">
            <accessPolicy value="public"/>
            <enumerator >WidgetShortcut</enumerator>
            <enumerator >WindowShortcut</enumerator>
            <enumerator >ApplicationShortcut</enumerator>
            <enumerator >WidgetWithChildrenShortcut</enumerator>
        </enum>
        <enum name="Qt::CheckState">
            <accessPolicy value="public"/>
            <enumerator >Unchecked</enumerator>
            <enumerator >PartiallyChecked</enumerator>
            <enumerator >Checked</enumerator>
        </enum>
        <enum name="Qt::FocusPolicy">
            <accessPolicy value="public"/>
            <enumerator value="0">NoFocus</enumerator>
            <enumerator value="0x1">TabFocus</enumerator>
            <enumerator value="0x2">ClickFocus</enumerator>
            <enumerator value="TabFocus|ClickFocus|0x8">StrongFocus</enumerator>
            <enumerator value="StrongFocus|0x4">WheelFocus</enumerator>
        </enum>
        <enum name="Qt::GestureType">
            <accessPolicy value="public"/>
            <enumerator value="1">TapGesture</enumerator>
            <enumerator value="2">TapAndHoldGesture</enumerator>
            <enumerator value="3">PanGesture</enumerator>
            <enumerator value="4">PinchGesture</enumerator>
            <enumerator value="5">SwipeGesture</enumerator>
            <enumerator value="0x0100">CustomGesture</enumerator>
            <enumerator value="~0u">LastGestureType</enumerator>
        </enum>
        <enum name="Qt::TimerType">
            <accessPolicy value="public"/>
            <enumerator >PreciseTimer</enumerator>
            <enumerator >CoarseTimer</enumerator>
            <enumerator >VeryCoarseTimer</enumerator>
        </enum>
        <enum name="Qt::DropAction">
            <accessPolicy value="public"/>
            <enumerator value="0x1">CopyAction</enumerator>
            <enumerator value="0x2">MoveAction</enumerator>
            <enumerator value="0x4">LinkAction</enumerator>
            <enumerator value="0xff">ActionMask</enumerator>
            <enumerator value="0x8002">TargetMoveAction</enumerator>
            <enumerator value="0x0">IgnoreAction</enumerator>
        </enum>
        <enum name="Qt::WindowType">
            <accessPolicy value="public"/>
            <enumerator value="0x00000000">Widget</enumerator>
            <enumerator value="0x00000001">Window</enumerator>
            <enumerator value="0x00000002|Window">Dialog</enumerator>
            <enumerator value="0x00000004|Window">Sheet</enumerator>
            <enumerator value="Sheet|Dialog">Drawer</enumerator>
            <enumerator value="0x00000008|Window">Popup</enumerator>
            <enumerator value="Popup|Dialog">Tool</enumerator>
            <enumerator value="Popup|Sheet">ToolTip</enumerator>
            <enumerator value="ToolTip|Dialog">SplashScreen</enumerator>
            <enumerator value="0x00000010|Window">Desktop</enumerator>
            <enumerator value="0x00000012">SubWindow</enumerator>
            <enumerator value="0x000000ff">WindowType_Mask</enumerator>
            <enumerator value="0x00000100">MSWindowsFixedSizeDialogHint</enumerator>
            <enumerator value="0x00000200">MSWindowsOwnDC</enumerator>
            <enumerator value="0x00000400">X11BypassWindowManagerHint</enumerator>
            <enumerator value="0x00000800">FramelessWindowHint</enumerator>
            <enumerator value="0x00001000">WindowTitleHint</enumerator>
            <enumerator value="0x00002000">WindowSystemMenuHint</enumerator>
            <enumerator value="0x00004000">WindowMinimizeButtonHint</enumerator>
            <enumerator value="0x00008000">WindowMaximizeButtonHint</enumerator>
            <enumerator value="WindowMinimizeButtonHint|WindowMaximizeButtonHint">WindowMinMaxButtonsHint</enumerator>
            <enumerator value="0x00010000">WindowContextHelpButtonHint</enumerator>
            <enumerator value="0x00020000">WindowShadeButtonHint</enumerator>
            <enumerator value="0x00040000">WindowStaysOnTopHint</enumerator>
            <enumerator value="0x00080000">WindowTransparentForInput</enumerator>
            <enumerator value="0x00100000">WindowOverridesSystemGestures</enumerator>
            <enumerator value="0x00200000">WindowDoesNotAcceptFocus</enumerator>
            <enumerator value="0x02000000">CustomizeWindowHint</enumerator>
            <enumerator value="0x04000000">WindowStaysOnBottomHint</enumerator>
            <enumerator value="0x08000000">WindowCloseButtonHint</enumerator>
            <enumerator value="0x10000000">MacWindowToolBarButtonHint</enumerator>
            <enumerator value="0x20000000">BypassGraphicsProxyWidget</enumerator>
            <enumerator value="0x00080000">WindowOkButtonHint</enumerator>
            <enumerator value="0x00100000">WindowCancelButtonHint</enumerator>
            <enumerator value="0x40000000">NoDropShadowWindowHint</enumerator>
            <enumerator value="0x80000000">WindowFullscreenButtonHint</enumerator>
        </enum>
        <enum name="Qt::DateFormat">
            <accessPolicy value="public"/>
            <enumerator >TextDate</enumerator>
            <enumerator >ISODate</enumerator>
            <enumerator >SystemLocaleDate</enumerator>
            <enumerator value="SystemLocaleDate">LocalDate</enumerator>
            <enumerator >LocaleDate</enumerator>
            <enumerator >SystemLocaleShortDate</enumerator>
            <enumerator >SystemLocaleLongDate</enumerator>
            <enumerator >DefaultLocaleShortDate</enumerator>
            <enumerator >DefaultLocaleLongDate</enumerator>
        </enum>
        <enum name="Qt::TextFormat">
            <accessPolicy value="public"/>
            <enumerator >PlainText</enumerator>
            <enumerator >RichText</enumerator>
            <enumerator >AutoText</enumerator>
        </enum>
        <enum name="Qt::PenJoinStyle">
            <accessPolicy value="public"/>
            <enumerator value="0x00">MiterJoin</enumerator>
            <enumerator value="0x40">BevelJoin</enumerator>
            <enumerator value="0x80">RoundJoin</enumerator>
            <enumerator value="0x100">SvgMiterJoin</enumerator>
            <enumerator value="0x1c0">MPenJoinStyle</enumerator>
        </enum>
        <enum name="Qt::GestureFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x01">DontStartGestureOnChildren</enumerator>
            <enumerator value="0x02">ReceivePartialGestures</enumerator>
            <enumerator value="0x04">IgnoredGesturesPropagateToParent</enumerator>
        </enum>
        <enum name="Qt::CaseSensitivity">
            <accessPolicy value="public"/>
            <enumerator >CaseInsensitive</enumerator>
            <enumerator >CaseSensitive</enumerator>
        </enum>
        <enum name="Qt::EventPriority">
            <accessPolicy value="public"/>
            <enumerator value="1">HighEventPriority</enumerator>
            <enumerator value="0">NormalEventPriority</enumerator>
            <enumerator value="-1">LowEventPriority</enumerator>
        </enum>
        <enum name="Qt::ImageConversionFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x00000003">ColorMode_Mask</enumerator>
            <enumerator value="0x00000000">AutoColor</enumerator>
            <enumerator value="0x00000003">ColorOnly</enumerator>
            <enumerator value="0x00000002">MonoOnly</enumerator>
            <enumerator value="0x0000000c">AlphaDither_Mask</enumerator>
            <enumerator value="0x00000000">ThresholdAlphaDither</enumerator>
            <enumerator value="0x00000004">OrderedAlphaDither</enumerator>
            <enumerator value="0x00000008">DiffuseAlphaDither</enumerator>
            <enumerator value="0x0000000c">NoAlpha</enumerator>
            <enumerator value="0x00000030">Dither_Mask</enumerator>
            <enumerator value="0x00000000">DiffuseDither</enumerator>
            <enumerator value="0x00000010">OrderedDither</enumerator>
            <enumerator value="0x00000020">ThresholdDither</enumerator>
            <enumerator value="0x000000c0">DitherMode_Mask</enumerator>
            <enumerator value="0x00000000">AutoDither</enumerator>
            <enumerator value="0x00000040">PreferDither</enumerator>
            <enumerator value="0x00000080">AvoidDither</enumerator>
            <enumerator value="0x00000100">NoOpaqueDetection</enumerator>
            <enumerator value="0x00000200">NoFormatConversion</enumerator>
        </enum>
        <enum name="Qt::CursorMoveStyle">
            <accessPolicy value="public"/>
            <enumerator >LogicalMoveStyle</enumerator>
            <enumerator >VisualMoveStyle</enumerator>
        </enum>
        <enum name="Qt::GestureState">
            <accessPolicy value="public"/>
            <enumerator >NoGesture</enumerator>
            <enumerator value="1">GestureStarted</enumerator>
            <enumerator value="2">GestureUpdated</enumerator>
            <enumerator value="3">GestureFinished</enumerator>
            <enumerator value="4">GestureCanceled</enumerator>
        </enum>
        <enum name="Qt::BGMode">
            <accessPolicy value="public"/>
            <enumerator >TransparentMode</enumerator>
            <enumerator >OpaqueMode</enumerator>
        </enum>
        <enum name="Qt::ConnectionType">
            <accessPolicy value="public"/>
            <enumerator >AutoConnection</enumerator>
            <enumerator >DirectConnection</enumerator>
            <enumerator >QueuedConnection</enumerator>
            <enumerator >BlockingQueuedConnection</enumerator>
            <enumerator value="0x80">UniqueConnection</enumerator>
        </enum>
        <enum name="Qt::ToolBarArea">
            <accessPolicy value="public"/>
            <enumerator value="0x1">LeftToolBarArea</enumerator>
            <enumerator value="0x2">RightToolBarArea</enumerator>
            <enumerator value="0x4">TopToolBarArea</enumerator>
            <enumerator value="0x8">BottomToolBarArea</enumerator>
            <enumerator value="0xf">ToolBarArea_Mask</enumerator>
            <enumerator value="ToolBarArea_Mask">AllToolBarAreas</enumerator>
            <enumerator value="0">NoToolBarArea</enumerator>
        </enum>
        <enum name="Qt::CoordinateSystem">
            <accessPolicy value="public"/>
            <enumerator >DeviceCoordinates</enumerator>
            <enumerator >LogicalCoordinates</enumerator>
        </enum>
        <enum name="Qt::FindChildOption">
            <accessPolicy value="public"/>
            <enumerator value="0x0">FindDirectChildrenOnly</enumerator>
            <enumerator value="0x1">FindChildrenRecursively</enumerator>
        </enum>
        <enum name="Qt::SizeMode">
            <accessPolicy value="public"/>
            <enumerator >AbsoluteSize</enumerator>
            <enumerator >RelativeSize</enumerator>
        </enum>
        <enum name="Qt::FocusReason">
            <accessPolicy value="public"/>
            <enumerator >MouseFocusReason</enumerator>
            <enumerator >TabFocusReason</enumerator>
            <enumerator >BacktabFocusReason</enumerator>
            <enumerator >ActiveWindowFocusReason</enumerator>
            <enumerator >PopupFocusReason</enumerator>
            <enumerator >ShortcutFocusReason</enumerator>
            <enumerator >MenuBarFocusReason</enumerator>
            <enumerator >OtherFocusReason</enumerator>
            <enumerator >NoFocusReason</enumerator>
        </enum>
        <enum name="Qt::Modifier">
            <accessPolicy value="public"/>
            <enumerator value="Qt::MetaModifier">META</enumerator>
            <enumerator value="Qt::ShiftModifier">SHIFT</enumerator>
            <enumerator value="Qt::ControlModifier">CTRL</enumerator>
            <enumerator value="Qt::AltModifier">ALT</enumerator>
            <enumerator value="KeyboardModifierMask">MODIFIER_MASK</enumerator>
            <enumerator value="0x00000000">UNICODE_ACCEL</enumerator>
        </enum>
        <enum name="Qt::TileRule">
            <accessPolicy value="public"/>
            <enumerator >StretchTile</enumerator>
            <enumerator >RepeatTile</enumerator>
            <enumerator >RoundTile</enumerator>
        </enum>
        <enum name="Qt::WhiteSpaceMode">
            <accessPolicy value="public"/>
            <enumerator >WhiteSpaceNormal</enumerator>
            <enumerator >WhiteSpacePre</enumerator>
            <enumerator >WhiteSpaceNoWrap</enumerator>
            <enumerator value="-1">WhiteSpaceModeUndefined</enumerator>
        </enum>
        <enum name="Qt::AspectRatioMode">
            <accessPolicy value="public"/>
            <enumerator >IgnoreAspectRatio</enumerator>
            <enumerator >KeepAspectRatio</enumerator>
            <enumerator >KeepAspectRatioByExpanding</enumerator>
        </enum>
        <enum name="Qt::SizeHint">
            <accessPolicy value="public"/>
            <enumerator >MinimumSize</enumerator>
            <enumerator >PreferredSize</enumerator>
            <enumerator >MaximumSize</enumerator>
            <enumerator >MinimumDescent</enumerator>
            <enumerator >NSizeHints</enumerator>
        </enum>
        <enum name="Qt::AlignmentFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x0001">AlignLeft</enumerator>
            <enumerator value="AlignLeft">AlignLeading</enumerator>
            <enumerator value="0x0002">AlignRight</enumerator>
            <enumerator value="AlignRight">AlignTrailing</enumerator>
            <enumerator value="0x0004">AlignHCenter</enumerator>
            <enumerator value="0x0008">AlignJustify</enumerator>
            <enumerator value="0x0010">AlignAbsolute</enumerator>
            <enumerator value="AlignLeft|AlignRight|AlignHCenter|AlignJustify|AlignAbsolute">AlignHorizontal_Mask</enumerator>
            <enumerator value="0x0020">AlignTop</enumerator>
            <enumerator value="0x0040">AlignBottom</enumerator>
            <enumerator value="0x0080">AlignVCenter</enumerator>
            <enumerator value="AlignTop|AlignBottom|AlignVCenter">AlignVertical_Mask</enumerator>
            <enumerator value="AlignVCenter|AlignHCenter">AlignCenter</enumerator>
        </enum>
        <enum name="Qt::ContextMenuPolicy">
            <accessPolicy value="public"/>
            <enumerator >NoContextMenu</enumerator>
            <enumerator >DefaultContextMenu</enumerator>
            <enumerator >ActionsContextMenu</enumerator>
            <enumerator >CustomContextMenu</enumerator>
            <enumerator >PreventContextMenu</enumerator>
        </enum>
        <enum name="Qt::DockWidgetArea">
            <accessPolicy value="public"/>
            <enumerator value="0x1">LeftDockWidgetArea</enumerator>
            <enumerator value="0x2">RightDockWidgetArea</enumerator>
            <enumerator value="0x4">TopDockWidgetArea</enumerator>
            <enumerator value="0x8">BottomDockWidgetArea</enumerator>
            <enumerator value="0xf">DockWidgetArea_Mask</enumerator>
            <enumerator value="DockWidgetArea_Mask">AllDockWidgetAreas</enumerator>
            <enumerator value="0">NoDockWidgetArea</enumerator>
        </enum>
        <enum name="Qt::UIEffect">
            <accessPolicy value="public"/>
            <enumerator >UI_General</enumerator>
            <enumerator >UI_AnimateMenu</enumerator>
            <enumerator >UI_FadeMenu</enumerator>
            <enumerator >UI_AnimateCombo</enumerator>
            <enumerator >UI_AnimateTooltip</enumerator>
            <enumerator >UI_FadeTooltip</enumerator>
            <enumerator >UI_AnimateToolBox</enumerator>
        </enum>
        <enum name="Qt::Initialization">
            <accessPolicy value="public"/>
            <enumerator >Uninitialized</enumerator>
        </enum>
        <enum name="Qt::AnchorPoint">
            <accessPolicy value="public"/>
            <enumerator value="0">AnchorLeft</enumerator>
            <enumerator >AnchorHorizontalCenter</enumerator>
            <enumerator >AnchorRight</enumerator>
            <enumerator >AnchorTop</enumerator>
            <enumerator >AnchorVerticalCenter</enumerator>
            <enumerator >AnchorBottom</enumerator>
        </enum>
        <enum name="Qt::GlobalColor">
            <accessPolicy value="public"/>
            <enumerator >color0</enumerator>
            <enumerator >color1</enumerator>
            <enumerator >black</enumerator>
            <enumerator >white</enumerator>
            <enumerator >darkGray</enumerator>
            <enumerator >gray</enumerator>
            <enumerator >lightGray</enumerator>
            <enumerator >red</enumerator>
            <enumerator >green</enumerator>
            <enumerator >blue</enumerator>
            <enumerator >cyan</enumerator>
            <enumerator >magenta</enumerator>
            <enumerator >yellow</enumerator>
            <enumerator >darkRed</enumerator>
            <enumerator >darkGreen</enumerator>
            <enumerator >darkBlue</enumerator>
            <enumerator >darkCyan</enumerator>
            <enumerator >darkMagenta</enumerator>
            <enumerator >darkYellow</enumerator>
            <enumerator >transparent</enumerator>
        </enum>
        <enum name="Qt::KeyboardModifier">
            <accessPolicy value="public"/>
            <enumerator value="0x00000000">NoModifier</enumerator>
            <enumerator value="0x02000000">ShiftModifier</enumerator>
            <enumerator value="0x04000000">ControlModifier</enumerator>
            <enumerator value="0x08000000">AltModifier</enumerator>
            <enumerator value="0x10000000">MetaModifier</enumerator>
            <enumerator value="0x20000000">KeypadModifier</enumerator>
            <enumerator value="0x40000000">GroupSwitchModifier</enumerator>
            <enumerator value="0xfe000000">KeyboardModifierMask</enumerator>
        </enum>
        <enum name="Qt::ScreenOrientation">
            <accessPolicy value="public"/>
            <enumerator value="0x00000000">PrimaryOrientation</enumerator>
            <enumerator value="0x00000001">PortraitOrientation</enumerator>
            <enumerator value="0x00000002">LandscapeOrientation</enumerator>
            <enumerator value="0x00000004">InvertedPortraitOrientation</enumerator>
            <enumerator value="0x00000008">InvertedLandscapeOrientation</enumerator>
        </enum>
        <enum name="Qt::NavigationMode">
            <accessPolicy value="public"/>
            <enumerator >NavigationModeNone</enumerator>
            <enumerator >NavigationModeKeypadTabOrder</enumerator>
            <enumerator >NavigationModeKeypadDirectional</enumerator>
            <enumerator >NavigationModeCursorAuto</enumerator>
            <enumerator >NavigationModeCursorForceVisible</enumerator>
        </enum>
        <enum name="Qt::ItemDataRole">
            <accessPolicy value="public"/>
            <enumerator value="0">DisplayRole</enumerator>
            <enumerator value="1">DecorationRole</enumerator>
            <enumerator value="2">EditRole</enumerator>
            <enumerator value="3">ToolTipRole</enumerator>
            <enumerator value="4">StatusTipRole</enumerator>
            <enumerator value="5">WhatsThisRole</enumerator>
            <enumerator value="6">FontRole</enumerator>
            <enumerator value="7">TextAlignmentRole</enumerator>
            <enumerator value="8">BackgroundColorRole</enumerator>
            <enumerator value="8">BackgroundRole</enumerator>
            <enumerator value="9">TextColorRole</enumerator>
            <enumerator value="9">ForegroundRole</enumerator>
            <enumerator value="10">CheckStateRole</enumerator>
            <enumerator value="11">AccessibleTextRole</enumerator>
            <enumerator value="12">AccessibleDescriptionRole</enumerator>
            <enumerator value="13">SizeHintRole</enumerator>
            <enumerator value="14">InitialSortOrderRole</enumerator>
            <enumerator value="27">DisplayPropertyRole</enumerator>
            <enumerator value="28">DecorationPropertyRole</enumerator>
            <enumerator value="29">ToolTipPropertyRole</enumerator>
            <enumerator value="30">StatusTipPropertyRole</enumerator>
            <enumerator value="31">WhatsThisPropertyRole</enumerator>
            <enumerator value="0x0100">UserRole</enumerator>
        </enum>
        <enum name="Qt::ScrollBarPolicy">
            <accessPolicy value="public"/>
            <enumerator >ScrollBarAsNeeded</enumerator>
            <enumerator >ScrollBarAlwaysOff</enumerator>
            <enumerator >ScrollBarAlwaysOn</enumerator>
        </enum>
        <enum name="Qt::InputMethodHint">
            <accessPolicy value="public"/>
            <enumerator value="0x0">ImhNone</enumerator>
            <enumerator value="0x1">ImhHiddenText</enumerator>
            <enumerator value="0x2">ImhSensitiveData</enumerator>
            <enumerator value="0x4">ImhNoAutoUppercase</enumerator>
            <enumerator value="0x8">ImhPreferNumbers</enumerator>
            <enumerator value="0x10">ImhPreferUppercase</enumerator>
            <enumerator value="0x20">ImhPreferLowercase</enumerator>
            <enumerator value="0x40">ImhNoPredictiveText</enumerator>
            <enumerator value="0x80">ImhDate</enumerator>
            <enumerator value="0x100">ImhTime</enumerator>
            <enumerator value="0x200">ImhPreferLatin</enumerator>
            <enumerator value="0x10000">ImhDigitsOnly</enumerator>
            <enumerator value="0x20000">ImhFormattedNumbersOnly</enumerator>
            <enumerator value="0x40000">ImhUppercaseOnly</enumerator>
            <enumerator value="0x80000">ImhLowercaseOnly</enumerator>
            <enumerator value="0x100000">ImhDialableCharactersOnly</enumerator>
            <enumerator value="0x200000">ImhEmailCharactersOnly</enumerator>
            <enumerator value="0x400000">ImhUrlCharactersOnly</enumerator>
            <enumerator value="0x800000">ImhLatinOnly</enumerator>
            <enumerator value="0xffff0000">ImhExclusiveInputMask</enumerator>
        </enum>
        <enum name="Qt::WindowModality">
            <accessPolicy value="public"/>
            <enumerator >NonModal</enumerator>
            <enumerator >WindowModal</enumerator>
            <enumerator >ApplicationModal</enumerator>
        </enum>
        <enum name="Qt::SortOrder">
            <accessPolicy value="public"/>
            <enumerator >AscendingOrder</enumerator>
            <enumerator >DescendingOrder</enumerator>
        </enum>
        <enum name="Qt::PenStyle">
            <accessPolicy value="public"/>
            <enumerator >NoPen</enumerator>
            <enumerator >SolidLine</enumerator>
            <enumerator >DashLine</enumerator>
            <enumerator >DotLine</enumerator>
            <enumerator >DashDotLine</enumerator>
            <enumerator >DashDotDotLine</enumerator>
            <enumerator >CustomDashLine</enumerator>
            <enumerator value="0x0f">MPenStyle</enumerator>
        </enum>
        <enum name="Qt::ItemFlag">
            <accessPolicy value="public"/>
            <enumerator value="0">NoItemFlags</enumerator>
            <enumerator value="1">ItemIsSelectable</enumerator>
            <enumerator value="2">ItemIsEditable</enumerator>
            <enumerator value="4">ItemIsDragEnabled</enumerator>
            <enumerator value="8">ItemIsDropEnabled</enumerator>
            <enumerator value="16">ItemIsUserCheckable</enumerator>
            <enumerator value="32">ItemIsEnabled</enumerator>
            <enumerator value="64">ItemIsTristate</enumerator>
        </enum>
        <enum name="Qt::Axis">
            <accessPolicy value="public"/>
            <enumerator >XAxis</enumerator>
            <enumerator >YAxis</enumerator>
            <enumerator >ZAxis</enumerator>
        </enum>
        <enum name="Qt::TransformationMode">
            <accessPolicy value="public"/>
            <enumerator >FastTransformation</enumerator>
            <enumerator >SmoothTransformation</enumerator>
        </enum>
        <enum name="Qt::WindowFrameSection">
            <accessPolicy value="public"/>
            <enumerator >NoSection</enumerator>
            <enumerator >LeftSection</enumerator>
            <enumerator >TopLeftSection</enumerator>
            <enumerator >TopSection</enumerator>
            <enumerator >TopRightSection</enumerator>
            <enumerator >RightSection</enumerator>
            <enumerator >BottomRightSection</enumerator>
            <enumerator >BottomSection</enumerator>
            <enumerator >BottomLeftSection</enumerator>
            <enumerator >TitleBarArea</enumerator>
        </enum>
        <enum name="Qt::HitTestAccuracy">
            <accessPolicy value="public"/>
            <enumerator >ExactHit</enumerator>
            <enumerator >FuzzyHit</enumerator>
        </enum>
        <enum name="Qt::CursorShape">
            <accessPolicy value="public"/>
            <enumerator >ArrowCursor</enumerator>
            <enumerator >UpArrowCursor</enumerator>
            <enumerator >CrossCursor</enumerator>
            <enumerator >WaitCursor</enumerator>
            <enumerator >IBeamCursor</enumerator>
            <enumerator >SizeVerCursor</enumerator>
            <enumerator >SizeHorCursor</enumerator>
            <enumerator >SizeBDiagCursor</enumerator>
            <enumerator >SizeFDiagCursor</enumerator>
            <enumerator >SizeAllCursor</enumerator>
            <enumerator >BlankCursor</enumerator>
            <enumerator >SplitVCursor</enumerator>
            <enumerator >SplitHCursor</enumerator>
            <enumerator >PointingHandCursor</enumerator>
            <enumerator >ForbiddenCursor</enumerator>
            <enumerator >WhatsThisCursor</enumerator>
            <enumerator >BusyCursor</enumerator>
            <enumerator >OpenHandCursor</enumerator>
            <enumerator >ClosedHandCursor</enumerator>
            <enumerator >DragCopyCursor</enumerator>
            <enumerator >DragMoveCursor</enumerator>
            <enumerator >DragLinkCursor</enumerator>
            <enumerator value="DragLinkCursor">LastCursor</enumerator>
            <enumerator value="24">BitmapCursor</enumerator>
            <enumerator value="25">CustomCursor</enumerator>
        </enum>
        <enum name="Qt::ItemSelectionMode">
            <accessPolicy value="public"/>
            <enumerator value="0x0">ContainsItemShape</enumerator>
            <enumerator value="0x1">IntersectsItemShape</enumerator>
            <enumerator value="0x2">ContainsItemBoundingRect</enumerator>
            <enumerator value="0x3">IntersectsItemBoundingRect</enumerator>
        </enum>
        <enum name="Qt::Orientation">
            <accessPolicy value="public"/>
            <enumerator value="0x1">Horizontal</enumerator>
            <enumerator value="0x2">Vertical</enumerator>
        </enum>
        <enum name="Qt::InputMethodQuery">
            <accessPolicy value="public"/>
            <enumerator value="0x1">ImEnabled</enumerator>
            <enumerator value="0x2">ImCursorRectangle</enumerator>
            <enumerator value="0x2">ImMicroFocus</enumerator>
            <enumerator value="0x4">ImFont</enumerator>
            <enumerator value="0x8">ImCursorPosition</enumerator>
            <enumerator value="0x10">ImSurroundingText</enumerator>
            <enumerator value="0x20">ImCurrentSelection</enumerator>
            <enumerator value="0x40">ImMaximumTextLength</enumerator>
            <enumerator value="0x80">ImAnchorPosition</enumerator>
            <enumerator value="0x100">ImHints</enumerator>
            <enumerator value="0x200">ImPreferredLanguage</enumerator>
            <enumerator value="0x80000000">ImPlatformData</enumerator>
            <enumerator value="ImCursorRectangle|ImCursorPosition|ImSurroundingText|ImCurrentSelection|ImAnchorPosition">ImQueryInput</enumerator>
            <enumerator value="0xffffffff">ImQueryAll</enumerator>
        </enum>
        <enum name="Qt::TimeSpec">
            <accessPolicy value="public"/>
            <enumerator >LocalTime</enumerator>
            <enumerator >UTC</enumerator>
            <enumerator >OffsetFromUTC</enumerator>
        </enum>
        <enum name="Qt::ArrowType">
            <accessPolicy value="public"/>
            <enumerator >NoArrow</enumerator>
            <enumerator >UpArrow</enumerator>
            <enumerator >DownArrow</enumerator>
            <enumerator >LeftArrow</enumerator>
            <enumerator >RightArrow</enumerator>
        </enum>
        <enum name="Qt::FillRule">
            <accessPolicy value="public"/>
            <enumerator >OddEvenFill</enumerator>
            <enumerator >WindingFill</enumerator>
        </enum>
        <enum name="Qt::MaskMode">
            <accessPolicy value="public"/>
            <enumerator >MaskInColor</enumerator>
            <enumerator >MaskOutColor</enumerator>
        </enum>
        <enum name="Qt::WindowState">
            <accessPolicy value="public"/>
            <enumerator value="0x00000000">WindowNoState</enumerator>
            <enumerator value="0x00000001">WindowMinimized</enumerator>
            <enumerator value="0x00000002">WindowMaximized</enumerator>
            <enumerator value="0x00000004">WindowFullScreen</enumerator>
            <enumerator value="0x00000008">WindowActive</enumerator>
        </enum>
        <enum name="Qt::ToolBarAreaSizes">
            <accessPolicy value="public"/>
            <enumerator value="4">NToolBarAreas</enumerator>
        </enum>
        <enum name="Qt::Corner">
            <accessPolicy value="public"/>
            <enumerator value="0x00000">TopLeftCorner</enumerator>
            <enumerator value="0x00001">TopRightCorner</enumerator>
            <enumerator value="0x00002">BottomLeftCorner</enumerator>
            <enumerator value="0x00003">BottomRightCorner</enumerator>
        </enum>
        <enum name="Qt::DayOfWeek">
            <accessPolicy value="public"/>
            <enumerator value="1">Monday</enumerator>
            <enumerator value="2">Tuesday</enumerator>
            <enumerator value="3">Wednesday</enumerator>
            <enumerator value="4">Thursday</enumerator>
            <enumerator value="5">Friday</enumerator>
            <enumerator value="6">Saturday</enumerator>
            <enumerator value="7">Sunday</enumerator>
        </enum>
        <enum name="Qt::ClipOperation">
            <accessPolicy value="public"/>
            <enumerator >NoClip</enumerator>
            <enumerator >ReplaceClip</enumerator>
            <enumerator >IntersectClip</enumerator>
        </enum>
        <enum name="Qt::LayoutDirection">
            <accessPolicy value="public"/>
            <enumerator >LeftToRight</enumerator>
            <enumerator >RightToLeft</enumerator>
            <enumerator >LayoutDirectionAuto</enumerator>
        </enum>
        <enum name="Qt::ToolButtonStyle">
            <accessPolicy value="public"/>
            <enumerator >ToolButtonIconOnly</enumerator>
            <enumerator >ToolButtonTextOnly</enumerator>
            <enumerator >ToolButtonTextBesideIcon</enumerator>
            <enumerator >ToolButtonTextUnderIcon</enumerator>
            <enumerator >ToolButtonFollowStyle</enumerator>
        </enum>
        <enum name="Qt::DockWidgetAreaSizes">
            <accessPolicy value="public"/>
            <enumerator value="4">NDockWidgetAreas</enumerator>
        </enum>
        <enum name="Qt::Key">
            <accessPolicy value="public"/>
            <enumerator value="0x01000000">Key_Escape</enumerator>
            <enumerator value="0x01000001">Key_Tab</enumerator>
            <enumerator value="0x01000002">Key_Backtab</enumerator>
            <enumerator value="0x01000003">Key_Backspace</enumerator>
            <enumerator value="0x01000004">Key_Return</enumerator>
            <enumerator value="0x01000005">Key_Enter</enumerator>
            <enumerator value="0x01000006">Key_Insert</enumerator>
            <enumerator value="0x01000007">Key_Delete</enumerator>
            <enumerator value="0x01000008">Key_Pause</enumerator>
            <enumerator value="0x01000009">Key_Print</enumerator>
            <enumerator value="0x0100000a">Key_SysReq</enumerator>
            <enumerator value="0x0100000b">Key_Clear</enumerator>
            <enumerator value="0x01000010">Key_Home</enumerator>
            <enumerator value="0x01000011">Key_End</enumerator>
            <enumerator value="0x01000012">Key_Left</enumerator>
            <enumerator value="0x01000013">Key_Up</enumerator>
            <enumerator value="0x01000014">Key_Right</enumerator>
            <enumerator value="0x01000015">Key_Down</enumerator>
            <enumerator value="0x01000016">Key_PageUp</enumerator>
            <enumerator value="0x01000017">Key_PageDown</enumerator>
            <enumerator value="0x01000020">Key_Shift</enumerator>
            <enumerator value="0x01000021">Key_Control</enumerator>
            <enumerator value="0x01000022">Key_Meta</enumerator>
            <enumerator value="0x01000023">Key_Alt</enumerator>
            <enumerator value="0x01000024">Key_CapsLock</enumerator>
            <enumerator value="0x01000025">Key_NumLock</enumerator>
            <enumerator value="0x01000026">Key_ScrollLock</enumerator>
            <enumerator value="0x01000030">Key_F1</enumerator>
            <enumerator value="0x01000031">Key_F2</enumerator>
            <enumerator value="0x01000032">Key_F3</enumerator>
            <enumerator value="0x01000033">Key_F4</enumerator>
            <enumerator value="0x01000034">Key_F5</enumerator>
            <enumerator value="0x01000035">Key_F6</enumerator>
            <enumerator value="0x01000036">Key_F7</enumerator>
            <enumerator value="0x01000037">Key_F8</enumerator>
            <enumerator value="0x01000038">Key_F9</enumerator>
            <enumerator value="0x01000039">Key_F10</enumerator>
            <enumerator value="0x0100003a">Key_F11</enumerator>
            <enumerator value="0x0100003b">Key_F12</enumerator>
            <enumerator value="0x0100003c">Key_F13</enumerator>
            <enumerator value="0x0100003d">Key_F14</enumerator>
            <enumerator value="0x0100003e">Key_F15</enumerator>
            <enumerator value="0x0100003f">Key_F16</enumerator>
            <enumerator value="0x01000040">Key_F17</enumerator>
            <enumerator value="0x01000041">Key_F18</enumerator>
            <enumerator value="0x01000042">Key_F19</enumerator>
            <enumerator value="0x01000043">Key_F20</enumerator>
            <enumerator value="0x01000044">Key_F21</enumerator>
            <enumerator value="0x01000045">Key_F22</enumerator>
            <enumerator value="0x01000046">Key_F23</enumerator>
            <enumerator value="0x01000047">Key_F24</enumerator>
            <enumerator value="0x01000048">Key_F25</enumerator>
            <enumerator value="0x01000049">Key_F26</enumerator>
            <enumerator value="0x0100004a">Key_F27</enumerator>
            <enumerator value="0x0100004b">Key_F28</enumerator>
            <enumerator value="0x0100004c">Key_F29</enumerator>
            <enumerator value="0x0100004d">Key_F30</enumerator>
            <enumerator value="0x0100004e">Key_F31</enumerator>
            <enumerator value="0x0100004f">Key_F32</enumerator>
            <enumerator value="0x01000050">Key_F33</enumerator>
            <enumerator value="0x01000051">Key_F34</enumerator>
            <enumerator value="0x01000052">Key_F35</enumerator>
            <enumerator value="0x01000053">Key_Super_L</enumerator>
            <enumerator value="0x01000054">Key_Super_R</enumerator>
            <enumerator value="0x01000055">Key_Menu</enumerator>
            <enumerator value="0x01000056">Key_Hyper_L</enumerator>
            <enumerator value="0x01000057">Key_Hyper_R</enumerator>
            <enumerator value="0x01000058">Key_Help</enumerator>
            <enumerator value="0x01000059">Key_Direction_L</enumerator>
            <enumerator value="0x01000060">Key_Direction_R</enumerator>
            <enumerator value="0x20">Key_Space</enumerator>
            <enumerator value="Key_Space">Key_Any</enumerator>
            <enumerator value="0x21">Key_Exclam</enumerator>
            <enumerator value="0x22">Key_QuoteDbl</enumerator>
            <enumerator value="0x23">Key_NumberSign</enumerator>
            <enumerator value="0x24">Key_Dollar</enumerator>
            <enumerator value="0x25">Key_Percent</enumerator>
            <enumerator value="0x26">Key_Ampersand</enumerator>
            <enumerator value="0x27">Key_Apostrophe</enumerator>
            <enumerator value="0x28">Key_ParenLeft</enumerator>
            <enumerator value="0x29">Key_ParenRight</enumerator>
            <enumerator value="0x2a">Key_Asterisk</enumerator>
            <enumerator value="0x2b">Key_Plus</enumerator>
            <enumerator value="0x2c">Key_Comma</enumerator>
            <enumerator value="0x2d">Key_Minus</enumerator>
            <enumerator value="0x2e">Key_Period</enumerator>
            <enumerator value="0x2f">Key_Slash</enumerator>
            <enumerator value="0x30">Key_0</enumerator>
            <enumerator value="0x31">Key_1</enumerator>
            <enumerator value="0x32">Key_2</enumerator>
            <enumerator value="0x33">Key_3</enumerator>
            <enumerator value="0x34">Key_4</enumerator>
            <enumerator value="0x35">Key_5</enumerator>
            <enumerator value="0x36">Key_6</enumerator>
            <enumerator value="0x37">Key_7</enumerator>
            <enumerator value="0x38">Key_8</enumerator>
            <enumerator value="0x39">Key_9</enumerator>
            <enumerator value="0x3a">Key_Colon</enumerator>
            <enumerator value="0x3b">Key_Semicolon</enumerator>
            <enumerator value="0x3c">Key_Less</enumerator>
            <enumerator value="0x3d">Key_Equal</enumerator>
            <enumerator value="0x3e">Key_Greater</enumerator>
            <enumerator value="0x3f">Key_Question</enumerator>
            <enumerator value="0x40">Key_At</enumerator>
            <enumerator value="0x41">Key_A</enumerator>
            <enumerator value="0x42">Key_B</enumerator>
            <enumerator value="0x43">Key_C</enumerator>
            <enumerator value="0x44">Key_D</enumerator>
            <enumerator value="0x45">Key_E</enumerator>
            <enumerator value="0x46">Key_F</enumerator>
            <enumerator value="0x47">Key_G</enumerator>
            <enumerator value="0x48">Key_H</enumerator>
            <enumerator value="0x49">Key_I</enumerator>
            <enumerator value="0x4a">Key_J</enumerator>
            <enumerator value="0x4b">Key_K</enumerator>
            <enumerator value="0x4c">Key_L</enumerator>
            <enumerator value="0x4d">Key_M</enumerator>
            <enumerator value="0x4e">Key_N</enumerator>
            <enumerator value="0x4f">Key_O</enumerator>
            <enumerator value="0x50">Key_P</enumerator>
            <enumerator value="0x51">Key_Q</enumerator>
            <enumerator value="0x52">Key_R</enumerator>
            <enumerator value="0x53">Key_S</enumerator>
            <enumerator value="0x54">Key_T</enumerator>
            <enumerator value="0x55">Key_U</enumerator>
            <enumerator value="0x56">Key_V</enumerator>
            <enumerator value="0x57">Key_W</enumerator>
            <enumerator value="0x58">Key_X</enumerator>
            <enumerator value="0x59">Key_Y</enumerator>
            <enumerator value="0x5a">Key_Z</enumerator>
            <enumerator value="0x5b">Key_BracketLeft</enumerator>
            <enumerator value="0x5c">Key_Backslash</enumerator>
            <enumerator value="0x5d">Key_BracketRight</enumerator>
            <enumerator value="0x5e">Key_AsciiCircum</enumerator>
            <enumerator value="0x5f">Key_Underscore</enumerator>
            <enumerator value="0x60">Key_QuoteLeft</enumerator>
            <enumerator value="0x7b">Key_BraceLeft</enumerator>
            <enumerator value="0x7c">Key_Bar</enumerator>
            <enumerator value="0x7d">Key_BraceRight</enumerator>
            <enumerator value="0x7e">Key_AsciiTilde</enumerator>
            <enumerator value="0x0a0">Key_nobreakspace</enumerator>
            <enumerator value="0x0a1">Key_exclamdown</enumerator>
            <enumerator value="0x0a2">Key_cent</enumerator>
            <enumerator value="0x0a3">Key_sterling</enumerator>
            <enumerator value="0x0a4">Key_currency</enumerator>
            <enumerator value="0x0a5">Key_yen</enumerator>
            <enumerator value="0x0a6">Key_brokenbar</enumerator>
            <enumerator value="0x0a7">Key_section</enumerator>
            <enumerator value="0x0a8">Key_diaeresis</enumerator>
            <enumerator value="0x0a9">Key_copyright</enumerator>
            <enumerator value="0x0aa">Key_ordfeminine</enumerator>
            <enumerator value="0x0ab">Key_guillemotleft</enumerator>
            <enumerator value="0x0ac">Key_notsign</enumerator>
            <enumerator value="0x0ad">Key_hyphen</enumerator>
            <enumerator value="0x0ae">Key_registered</enumerator>
            <enumerator value="0x0af">Key_macron</enumerator>
            <enumerator value="0x0b0">Key_degree</enumerator>
            <enumerator value="0x0b1">Key_plusminus</enumerator>
            <enumerator value="0x0b2">Key_twosuperior</enumerator>
            <enumerator value="0x0b3">Key_threesuperior</enumerator>
            <enumerator value="0x0b4">Key_acute</enumerator>
            <enumerator value="0x0b5">Key_mu</enumerator>
            <enumerator value="0x0b6">Key_paragraph</enumerator>
            <enumerator value="0x0b7">Key_periodcentered</enumerator>
            <enumerator value="0x0b8">Key_cedilla</enumerator>
            <enumerator value="0x0b9">Key_onesuperior</enumerator>
            <enumerator value="0x0ba">Key_masculine</enumerator>
            <enumerator value="0x0bb">Key_guillemotright</enumerator>
            <enumerator value="0x0bc">Key_onequarter</enumerator>
            <enumerator value="0x0bd">Key_onehalf</enumerator>
            <enumerator value="0x0be">Key_threequarters</enumerator>
            <enumerator value="0x0bf">Key_questiondown</enumerator>
            <enumerator value="0x0c0">Key_Agrave</enumerator>
            <enumerator value="0x0c1">Key_Aacute</enumerator>
            <enumerator value="0x0c2">Key_Acircumflex</enumerator>
            <enumerator value="0x0c3">Key_Atilde</enumerator>
            <enumerator value="0x0c4">Key_Adiaeresis</enumerator>
            <enumerator value="0x0c5">Key_Aring</enumerator>
            <enumerator value="0x0c6">Key_AE</enumerator>
            <enumerator value="0x0c7">Key_Ccedilla</enumerator>
            <enumerator value="0x0c8">Key_Egrave</enumerator>
            <enumerator value="0x0c9">Key_Eacute</enumerator>
            <enumerator value="0x0ca">Key_Ecircumflex</enumerator>
            <enumerator value="0x0cb">Key_Ediaeresis</enumerator>
            <enumerator value="0x0cc">Key_Igrave</enumerator>
            <enumerator value="0x0cd">Key_Iacute</enumerator>
            <enumerator value="0x0ce">Key_Icircumflex</enumerator>
            <enumerator value="0x0cf">Key_Idiaeresis</enumerator>
            <enumerator value="0x0d0">Key_ETH</enumerator>
            <enumerator value="0x0d1">Key_Ntilde</enumerator>
            <enumerator value="0x0d2">Key_Ograve</enumerator>
            <enumerator value="0x0d3">Key_Oacute</enumerator>
            <enumerator value="0x0d4">Key_Ocircumflex</enumerator>
            <enumerator value="0x0d5">Key_Otilde</enumerator>
            <enumerator value="0x0d6">Key_Odiaeresis</enumerator>
            <enumerator value="0x0d7">Key_multiply</enumerator>
            <enumerator value="0x0d8">Key_Ooblique</enumerator>
            <enumerator value="0x0d9">Key_Ugrave</enumerator>
            <enumerator value="0x0da">Key_Uacute</enumerator>
            <enumerator value="0x0db">Key_Ucircumflex</enumerator>
            <enumerator value="0x0dc">Key_Udiaeresis</enumerator>
            <enumerator value="0x0dd">Key_Yacute</enumerator>
            <enumerator value="0x0de">Key_THORN</enumerator>
            <enumerator value="0x0df">Key_ssharp</enumerator>
            <enumerator value="0x0f7">Key_division</enumerator>
            <enumerator value="0x0ff">Key_ydiaeresis</enumerator>
            <enumerator value="0x01001103">Key_AltGr</enumerator>
            <enumerator value="0x01001120">Key_Multi_key</enumerator>
            <enumerator value="0x01001137">Key_Codeinput</enumerator>
            <enumerator value="0x0100113c">Key_SingleCandidate</enumerator>
            <enumerator value="0x0100113d">Key_MultipleCandidate</enumerator>
            <enumerator value="0x0100113e">Key_PreviousCandidate</enumerator>
            <enumerator value="0x0100117e">Key_Mode_switch</enumerator>
            <enumerator value="0x01001121">Key_Kanji</enumerator>
            <enumerator value="0x01001122">Key_Muhenkan</enumerator>
            <enumerator value="0x01001123">Key_Henkan</enumerator>
            <enumerator value="0x01001124">Key_Romaji</enumerator>
            <enumerator value="0x01001125">Key_Hiragana</enumerator>
            <enumerator value="0x01001126">Key_Katakana</enumerator>
            <enumerator value="0x01001127">Key_Hiragana_Katakana</enumerator>
            <enumerator value="0x01001128">Key_Zenkaku</enumerator>
            <enumerator value="0x01001129">Key_Hankaku</enumerator>
            <enumerator value="0x0100112a">Key_Zenkaku_Hankaku</enumerator>
            <enumerator value="0x0100112b">Key_Touroku</enumerator>
            <enumerator value="0x0100112c">Key_Massyo</enumerator>
            <enumerator value="0x0100112d">Key_Kana_Lock</enumerator>
            <enumerator value="0x0100112e">Key_Kana_Shift</enumerator>
            <enumerator value="0x0100112f">Key_Eisu_Shift</enumerator>
            <enumerator value="0x01001130">Key_Eisu_toggle</enumerator>
            <enumerator value="0x01001131">Key_Hangul</enumerator>
            <enumerator value="0x01001132">Key_Hangul_Start</enumerator>
            <enumerator value="0x01001133">Key_Hangul_End</enumerator>
            <enumerator value="0x01001134">Key_Hangul_Hanja</enumerator>
            <enumerator value="0x01001135">Key_Hangul_Jamo</enumerator>
            <enumerator value="0x01001136">Key_Hangul_Romaja</enumerator>
            <enumerator value="0x01001138">Key_Hangul_Jeonja</enumerator>
            <enumerator value="0x01001139">Key_Hangul_Banja</enumerator>
            <enumerator value="0x0100113a">Key_Hangul_PreHanja</enumerator>
            <enumerator value="0x0100113b">Key_Hangul_PostHanja</enumerator>
            <enumerator value="0x0100113f">Key_Hangul_Special</enumerator>
            <enumerator value="0x01001250">Key_Dead_Grave</enumerator>
            <enumerator value="0x01001251">Key_Dead_Acute</enumerator>
            <enumerator value="0x01001252">Key_Dead_Circumflex</enumerator>
            <enumerator value="0x01001253">Key_Dead_Tilde</enumerator>
            <enumerator value="0x01001254">Key_Dead_Macron</enumerator>
            <enumerator value="0x01001255">Key_Dead_Breve</enumerator>
            <enumerator value="0x01001256">Key_Dead_Abovedot</enumerator>
            <enumerator value="0x01001257">Key_Dead_Diaeresis</enumerator>
            <enumerator value="0x01001258">Key_Dead_Abovering</enumerator>
            <enumerator value="0x01001259">Key_Dead_Doubleacute</enumerator>
            <enumerator value="0x0100125a">Key_Dead_Caron</enumerator>
            <enumerator value="0x0100125b">Key_Dead_Cedilla</enumerator>
            <enumerator value="0x0100125c">Key_Dead_Ogonek</enumerator>
            <enumerator value="0x0100125d">Key_Dead_Iota</enumerator>
            <enumerator value="0x0100125e">Key_Dead_Voiced_Sound</enumerator>
            <enumerator value="0x0100125f">Key_Dead_Semivoiced_Sound</enumerator>
            <enumerator value="0x01001260">Key_Dead_Belowdot</enumerator>
            <enumerator value="0x01001261">Key_Dead_Hook</enumerator>
            <enumerator value="0x01001262">Key_Dead_Horn</enumerator>
            <enumerator value="0x01000061">Key_Back</enumerator>
            <enumerator value="0x01000062">Key_Forward</enumerator>
            <enumerator value="0x01000063">Key_Stop</enumerator>
            <enumerator value="0x01000064">Key_Refresh</enumerator>
            <enumerator value="0x01000070">Key_VolumeDown</enumerator>
            <enumerator value="0x01000071">Key_VolumeMute</enumerator>
            <enumerator value="0x01000072">Key_VolumeUp</enumerator>
            <enumerator value="0x01000073">Key_BassBoost</enumerator>
            <enumerator value="0x01000074">Key_BassUp</enumerator>
            <enumerator value="0x01000075">Key_BassDown</enumerator>
            <enumerator value="0x01000076">Key_TrebleUp</enumerator>
            <enumerator value="0x01000077">Key_TrebleDown</enumerator>
            <enumerator value="0x01000080">Key_MediaPlay</enumerator>
            <enumerator value="0x01000081">Key_MediaStop</enumerator>
            <enumerator value="0x01000082">Key_MediaPrevious</enumerator>
            <enumerator value="0x01000083">Key_MediaNext</enumerator>
            <enumerator value="0x01000084">Key_MediaRecord</enumerator>
            <enumerator value="0x1000085">Key_MediaPause</enumerator>
            <enumerator value="0x1000086">Key_MediaTogglePlayPause</enumerator>
            <enumerator value="0x01000090">Key_HomePage</enumerator>
            <enumerator value="0x01000091">Key_Favorites</enumerator>
            <enumerator value="0x01000092">Key_Search</enumerator>
            <enumerator value="0x01000093">Key_Standby</enumerator>
            <enumerator value="0x01000094">Key_OpenUrl</enumerator>
            <enumerator value="0x010000a0">Key_LaunchMail</enumerator>
            <enumerator value="0x010000a1">Key_LaunchMedia</enumerator>
            <enumerator value="0x010000a2">Key_Launch0</enumerator>
            <enumerator value="0x010000a3">Key_Launch1</enumerator>
            <enumerator value="0x010000a4">Key_Launch2</enumerator>
            <enumerator value="0x010000a5">Key_Launch3</enumerator>
            <enumerator value="0x010000a6">Key_Launch4</enumerator>
            <enumerator value="0x010000a7">Key_Launch5</enumerator>
            <enumerator value="0x010000a8">Key_Launch6</enumerator>
            <enumerator value="0x010000a9">Key_Launch7</enumerator>
            <enumerator value="0x010000aa">Key_Launch8</enumerator>
            <enumerator value="0x010000ab">Key_Launch9</enumerator>
            <enumerator value="0x010000ac">Key_LaunchA</enumerator>
            <enumerator value="0x010000ad">Key_LaunchB</enumerator>
            <enumerator value="0x010000ae">Key_LaunchC</enumerator>
            <enumerator value="0x010000af">Key_LaunchD</enumerator>
            <enumerator value="0x010000b0">Key_LaunchE</enumerator>
            <enumerator value="0x010000b1">Key_LaunchF</enumerator>
            <enumerator value="0x010000b2">Key_MonBrightnessUp</enumerator>
            <enumerator value="0x010000b3">Key_MonBrightnessDown</enumerator>
            <enumerator value="0x010000b4">Key_KeyboardLightOnOff</enumerator>
            <enumerator value="0x010000b5">Key_KeyboardBrightnessUp</enumerator>
            <enumerator value="0x010000b6">Key_KeyboardBrightnessDown</enumerator>
            <enumerator value="0x010000b7">Key_PowerOff</enumerator>
            <enumerator value="0x010000b8">Key_WakeUp</enumerator>
            <enumerator value="0x010000b9">Key_Eject</enumerator>
            <enumerator value="0x010000ba">Key_ScreenSaver</enumerator>
            <enumerator value="0x010000bb">Key_WWW</enumerator>
            <enumerator value="0x010000bc">Key_Memo</enumerator>
            <enumerator value="0x010000bd">Key_LightBulb</enumerator>
            <enumerator value="0x010000be">Key_Shop</enumerator>
            <enumerator value="0x010000bf">Key_History</enumerator>
            <enumerator value="0x010000c0">Key_AddFavorite</enumerator>
            <enumerator value="0x010000c1">Key_HotLinks</enumerator>
            <enumerator value="0x010000c2">Key_BrightnessAdjust</enumerator>
            <enumerator value="0x010000c3">Key_Finance</enumerator>
            <enumerator value="0x010000c4">Key_Community</enumerator>
            <enumerator value="0x010000c5">Key_AudioRewind</enumerator>
            <enumerator value="0x010000c6">Key_BackForward</enumerator>
            <enumerator value="0x010000c7">Key_ApplicationLeft</enumerator>
            <enumerator value="0x010000c8">Key_ApplicationRight</enumerator>
            <enumerator value="0x010000c9">Key_Book</enumerator>
            <enumerator value="0x010000ca">Key_CD</enumerator>
            <enumerator value="0x010000cb">Key_Calculator</enumerator>
            <enumerator value="0x010000cc">Key_ToDoList</enumerator>
            <enumerator value="0x010000cd">Key_ClearGrab</enumerator>
            <enumerator value="0x010000ce">Key_Close</enumerator>
            <enumerator value="0x010000cf">Key_Copy</enumerator>
            <enumerator value="0x010000d0">Key_Cut</enumerator>
            <enumerator value="0x010000d1">Key_Display</enumerator>
            <enumerator value="0x010000d2">Key_DOS</enumerator>
            <enumerator value="0x010000d3">Key_Documents</enumerator>
            <enumerator value="0x010000d4">Key_Excel</enumerator>
            <enumerator value="0x010000d5">Key_Explorer</enumerator>
            <enumerator value="0x010000d6">Key_Game</enumerator>
            <enumerator value="0x010000d7">Key_Go</enumerator>
            <enumerator value="0x010000d8">Key_iTouch</enumerator>
            <enumerator value="0x010000d9">Key_LogOff</enumerator>
            <enumerator value="0x010000da">Key_Market</enumerator>
            <enumerator value="0x010000db">Key_Meeting</enumerator>
            <enumerator value="0x010000dc">Key_MenuKB</enumerator>
            <enumerator value="0x010000dd">Key_MenuPB</enumerator>
            <enumerator value="0x010000de">Key_MySites</enumerator>
            <enumerator value="0x010000df">Key_News</enumerator>
            <enumerator value="0x010000e0">Key_OfficeHome</enumerator>
            <enumerator value="0x010000e1">Key_Option</enumerator>
            <enumerator value="0x010000e2">Key_Paste</enumerator>
            <enumerator value="0x010000e3">Key_Phone</enumerator>
            <enumerator value="0x010000e4">Key_Calendar</enumerator>
            <enumerator value="0x010000e5">Key_Reply</enumerator>
            <enumerator value="0x010000e6">Key_Reload</enumerator>
            <enumerator value="0x010000e7">Key_RotateWindows</enumerator>
            <enumerator value="0x010000e8">Key_RotationPB</enumerator>
            <enumerator value="0x010000e9">Key_RotationKB</enumerator>
            <enumerator value="0x010000ea">Key_Save</enumerator>
            <enumerator value="0x010000eb">Key_Send</enumerator>
            <enumerator value="0x010000ec">Key_Spell</enumerator>
            <enumerator value="0x010000ed">Key_SplitScreen</enumerator>
            <enumerator value="0x010000ee">Key_Support</enumerator>
            <enumerator value="0x010000ef">Key_TaskPane</enumerator>
            <enumerator value="0x010000f0">Key_Terminal</enumerator>
            <enumerator value="0x010000f1">Key_Tools</enumerator>
            <enumerator value="0x010000f2">Key_Travel</enumerator>
            <enumerator value="0x010000f3">Key_Video</enumerator>
            <enumerator value="0x010000f4">Key_Word</enumerator>
            <enumerator value="0x010000f5">Key_Xfer</enumerator>
            <enumerator value="0x010000f6">Key_ZoomIn</enumerator>
            <enumerator value="0x010000f7">Key_ZoomOut</enumerator>
            <enumerator value="0x010000f8">Key_Away</enumerator>
            <enumerator value="0x010000f9">Key_Messenger</enumerator>
            <enumerator value="0x010000fa">Key_WebCam</enumerator>
            <enumerator value="0x010000fb">Key_MailForward</enumerator>
            <enumerator value="0x010000fc">Key_Pictures</enumerator>
            <enumerator value="0x010000fd">Key_Music</enumerator>
            <enumerator value="0x010000fe">Key_Battery</enumerator>
            <enumerator value="0x010000ff">Key_Bluetooth</enumerator>
            <enumerator value="0x01000100">Key_WLAN</enumerator>
            <enumerator value="0x01000101">Key_UWB</enumerator>
            <enumerator value="0x01000102">Key_AudioForward</enumerator>
            <enumerator value="0x01000103">Key_AudioRepeat</enumerator>
            <enumerator value="0x01000104">Key_AudioRandomPlay</enumerator>
            <enumerator value="0x01000105">Key_Subtitle</enumerator>
            <enumerator value="0x01000106">Key_AudioCycleTrack</enumerator>
            <enumerator value="0x01000107">Key_Time</enumerator>
            <enumerator value="0x01000108">Key_Hibernate</enumerator>
            <enumerator value="0x01000109">Key_View</enumerator>
            <enumerator value="0x0100010a">Key_TopMenu</enumerator>
            <enumerator value="0x0100010b">Key_PowerDown</enumerator>
            <enumerator value="0x0100010c">Key_Suspend</enumerator>
            <enumerator value="0x0100010d">Key_ContrastAdjust</enumerator>
            <enumerator value="0x0100010e">Key_LaunchG</enumerator>
            <enumerator value="0x0100010f">Key_LaunchH</enumerator>
            <enumerator value="0x01000110">Key_TouchpadToggle</enumerator>
            <enumerator value="0x01000111">Key_TouchpadOn</enumerator>
            <enumerator value="0x01000112">Key_TouchpadOff</enumerator>
            <enumerator value="0x0100ffff">Key_MediaLast</enumerator>
            <enumerator value="0x01010000">Key_Select</enumerator>
            <enumerator value="0x01010001">Key_Yes</enumerator>
            <enumerator value="0x01010002">Key_No</enumerator>
            <enumerator value="0x01020001">Key_Cancel</enumerator>
            <enumerator value="0x01020002">Key_Printer</enumerator>
            <enumerator value="0x01020003">Key_Execute</enumerator>
            <enumerator value="0x01020004">Key_Sleep</enumerator>
            <enumerator value="0x01020005">Key_Play</enumerator>
            <enumerator value="0x01020006">Key_Zoom</enumerator>
            <enumerator value="0x01100000">Key_Context1</enumerator>
            <enumerator value="0x01100001">Key_Context2</enumerator>
            <enumerator value="0x01100002">Key_Context3</enumerator>
            <enumerator value="0x01100003">Key_Context4</enumerator>
            <enumerator value="0x01100004">Key_Call</enumerator>
            <enumerator value="0x01100005">Key_Hangup</enumerator>
            <enumerator value="0x01100006">Key_Flip</enumerator>
            <enumerator value="0x01100007">Key_ToggleCallHangup</enumerator>
            <enumerator value="0x01100008">Key_VoiceDial</enumerator>
            <enumerator value="0x01100009">Key_LastNumberRedial</enumerator>
            <enumerator value="0x01100020">Key_Camera</enumerator>
            <enumerator value="0x01100021">Key_CameraFocus</enumerator>
            <enumerator value="0x01ffffff">Key_unknown</enumerator>
        </enum>
        <enum name="Qt::ApplicationAttribute">
            <accessPolicy value="public"/>
            <enumerator value="0">AA_ImmediateWidgetCreation</enumerator>
            <enumerator value="1">AA_MSWindowsUseDirect3DByDefault</enumerator>
            <enumerator value="2">AA_DontShowIconsInMenus</enumerator>
            <enumerator value="3">AA_NativeWindows</enumerator>
            <enumerator value="4">AA_DontCreateNativeWidgetSiblings</enumerator>
            <enumerator value="5">AA_MacPluginApplication</enumerator>
            <enumerator value="6">AA_DontUseNativeMenuBar</enumerator>
            <enumerator value="7">AA_MacDontSwapCtrlAndMeta</enumerator>
            <enumerator value="8">AA_Use96Dpi</enumerator>
            <enumerator value="10">AA_X11InitThreads</enumerator>
            <enumerator value="11">AA_SynthesizeTouchForUnhandledMouseEvents</enumerator>
            <enumerator value="12">AA_SynthesizeMouseForUnhandledTouchEvents</enumerator>
            <enumerator >AA_AttributeCount</enumerator>
        </enum>
        <enum name="Qt::TextFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x0100">TextSingleLine</enumerator>
            <enumerator value="0x0200">TextDontClip</enumerator>
            <enumerator value="0x0400">TextExpandTabs</enumerator>
            <enumerator value="0x0800">TextShowMnemonic</enumerator>
            <enumerator value="0x1000">TextWordWrap</enumerator>
            <enumerator value="0x2000">TextWrapAnywhere</enumerator>
            <enumerator value="0x4000">TextDontPrint</enumerator>
            <enumerator value="0x08000000">TextIncludeTrailingSpaces</enumerator>
            <enumerator value="0x8000">TextHideMnemonic</enumerator>
            <enumerator value="0x10000">TextJustificationForced</enumerator>
            <enumerator value="0x20000">TextForceLeftToRight</enumerator>
            <enumerator value="0x40000">TextForceRightToLeft</enumerator>
            <enumerator value="0x80000">TextLongestVariant</enumerator>
            <enumerator value="0x100000">TextBypassShaping</enumerator>
        </enum>
        <enum name="Qt::BrushStyle">
            <accessPolicy value="public"/>
            <enumerator >NoBrush</enumerator>
            <enumerator >SolidPattern</enumerator>
            <enumerator >Dense1Pattern</enumerator>
            <enumerator >Dense2Pattern</enumerator>
            <enumerator >Dense3Pattern</enumerator>
            <enumerator >Dense4Pattern</enumerator>
            <enumerator >Dense5Pattern</enumerator>
            <enumerator >Dense6Pattern</enumerator>
            <enumerator >Dense7Pattern</enumerator>
            <enumerator >HorPattern</enumerator>
            <enumerator >VerPattern</enumerator>
            <enumerator >CrossPattern</enumerator>
            <enumerator >BDiagPattern</enumerator>
            <enumerator >FDiagPattern</enumerator>
            <enumerator >DiagCrossPattern</enumerator>
            <enumerator >LinearGradientPattern</enumerator>
            <enumerator >RadialGradientPattern</enumerator>
            <enumerator >ConicalGradientPattern</enumerator>
            <enumerator value="24">TexturePattern</enumerator>
        </enum>
        <enum name="Qt::WidgetAttribute">
            <accessPolicy value="public"/>
            <enumerator value="0">WA_Disabled</enumerator>
            <enumerator value="1">WA_UnderMouse</enumerator>
            <enumerator value="2">WA_MouseTracking</enumerator>
            <enumerator value="3">WA_ContentsPropagated</enumerator>
            <enumerator value="4">WA_OpaquePaintEvent</enumerator>
            <enumerator value="WA_OpaquePaintEvent">WA_NoBackground</enumerator>
            <enumerator value="5">WA_StaticContents</enumerator>
            <enumerator value="7">WA_LaidOut</enumerator>
            <enumerator value="8">WA_PaintOnScreen</enumerator>
            <enumerator value="9">WA_NoSystemBackground</enumerator>
            <enumerator value="10">WA_UpdatesDisabled</enumerator>
            <enumerator value="11">WA_Mapped</enumerator>
            <enumerator value="12">WA_MacNoClickThrough</enumerator>
            <enumerator value="14">WA_InputMethodEnabled</enumerator>
            <enumerator value="15">WA_WState_Visible</enumerator>
            <enumerator value="16">WA_WState_Hidden</enumerator>
            <enumerator value="32">WA_ForceDisabled</enumerator>
            <enumerator value="33">WA_KeyCompression</enumerator>
            <enumerator value="34">WA_PendingMoveEvent</enumerator>
            <enumerator value="35">WA_PendingResizeEvent</enumerator>
            <enumerator value="36">WA_SetPalette</enumerator>
            <enumerator value="37">WA_SetFont</enumerator>
            <enumerator value="38">WA_SetCursor</enumerator>
            <enumerator value="39">WA_NoChildEventsFromChildren</enumerator>
            <enumerator value="41">WA_WindowModified</enumerator>
            <enumerator value="42">WA_Resized</enumerator>
            <enumerator value="43">WA_Moved</enumerator>
            <enumerator value="44">WA_PendingUpdate</enumerator>
            <enumerator value="45">WA_InvalidSize</enumerator>
            <enumerator value="46">WA_MacBrushedMetal</enumerator>
            <enumerator value="WA_MacBrushedMetal">WA_MacMetalStyle</enumerator>
            <enumerator value="47">WA_CustomWhatsThis</enumerator>
            <enumerator value="48">WA_LayoutOnEntireRect</enumerator>
            <enumerator value="49">WA_OutsideWSRange</enumerator>
            <enumerator value="50">WA_GrabbedShortcut</enumerator>
            <enumerator value="51">WA_TransparentForMouseEvents</enumerator>
            <enumerator value="52">WA_PaintUnclipped</enumerator>
            <enumerator value="53">WA_SetWindowIcon</enumerator>
            <enumerator value="54">WA_NoMouseReplay</enumerator>
            <enumerator value="55">WA_DeleteOnClose</enumerator>
            <enumerator value="56">WA_RightToLeft</enumerator>
            <enumerator value="57">WA_SetLayoutDirection</enumerator>
            <enumerator value="58">WA_NoChildEventsForParent</enumerator>
            <enumerator value="59">WA_ForceUpdatesDisabled</enumerator>
            <enumerator value="60">WA_WState_Created</enumerator>
            <enumerator value="61">WA_WState_CompressKeys</enumerator>
            <enumerator value="62">WA_WState_InPaintEvent</enumerator>
            <enumerator value="63">WA_WState_Reparented</enumerator>
            <enumerator value="64">WA_WState_ConfigPending</enumerator>
            <enumerator value="66">WA_WState_Polished</enumerator>
            <enumerator value="67">WA_WState_DND</enumerator>
            <enumerator value="68">WA_WState_OwnSizePolicy</enumerator>
            <enumerator value="69">WA_WState_ExplicitShowHide</enumerator>
            <enumerator value="70">WA_ShowModal</enumerator>
            <enumerator value="71">WA_MouseNoMask</enumerator>
            <enumerator value="72">WA_GroupLeader</enumerator>
            <enumerator value="73">WA_NoMousePropagation</enumerator>
            <enumerator value="74">WA_Hover</enumerator>
            <enumerator value="75">WA_InputMethodTransparent</enumerator>
            <enumerator value="76">WA_QuitOnClose</enumerator>
            <enumerator value="77">WA_KeyboardFocusChange</enumerator>
            <enumerator value="78">WA_AcceptDrops</enumerator>
            <enumerator value="79">WA_DropSiteRegistered</enumerator>
            <enumerator value="WA_DropSiteRegistered">WA_ForceAcceptDrops</enumerator>
            <enumerator value="80">WA_WindowPropagation</enumerator>
            <enumerator value="81">WA_NoX11EventCompression</enumerator>
            <enumerator value="82">WA_TintedBackground</enumerator>
            <enumerator value="83">WA_X11OpenGLOverlay</enumerator>
            <enumerator value="84">WA_AlwaysShowToolTips</enumerator>
            <enumerator value="85">WA_MacOpaqueSizeGrip</enumerator>
            <enumerator value="86">WA_SetStyle</enumerator>
            <enumerator value="87">WA_SetLocale</enumerator>
            <enumerator value="88">WA_MacShowFocusRect</enumerator>
            <enumerator value="89">WA_MacNormalSize</enumerator>
            <enumerator value="90">WA_MacSmallSize</enumerator>
            <enumerator value="91">WA_MacMiniSize</enumerator>
            <enumerator value="92">WA_LayoutUsesWidgetRect</enumerator>
            <enumerator value="93">WA_StyledBackground</enumerator>
            <enumerator value="94">WA_MSWindowsUseDirect3D</enumerator>
            <enumerator value="95">WA_CanHostQMdiSubWindowTitleBar</enumerator>
            <enumerator value="96">WA_MacAlwaysShowToolWindow</enumerator>
            <enumerator value="97">WA_StyleSheet</enumerator>
            <enumerator value="98">WA_ShowWithoutActivating</enumerator>
            <enumerator value="99">WA_X11BypassTransientForHint</enumerator>
            <enumerator value="100">WA_NativeWindow</enumerator>
            <enumerator value="101">WA_DontCreateNativeAncestors</enumerator>
            <enumerator value="102">WA_MacVariableSize</enumerator>
            <enumerator value="103">WA_DontShowOnScreen</enumerator>
            <enumerator value="104">WA_X11NetWmWindowTypeDesktop</enumerator>
            <enumerator value="105">WA_X11NetWmWindowTypeDock</enumerator>
            <enumerator value="106">WA_X11NetWmWindowTypeToolBar</enumerator>
            <enumerator value="107">WA_X11NetWmWindowTypeMenu</enumerator>
            <enumerator value="108">WA_X11NetWmWindowTypeUtility</enumerator>
            <enumerator value="109">WA_X11NetWmWindowTypeSplash</enumerator>
            <enumerator value="110">WA_X11NetWmWindowTypeDialog</enumerator>
            <enumerator value="111">WA_X11NetWmWindowTypeDropDownMenu</enumerator>
            <enumerator value="112">WA_X11NetWmWindowTypePopupMenu</enumerator>
            <enumerator value="113">WA_X11NetWmWindowTypeToolTip</enumerator>
            <enumerator value="114">WA_X11NetWmWindowTypeNotification</enumerator>
            <enumerator value="115">WA_X11NetWmWindowTypeCombo</enumerator>
            <enumerator value="116">WA_X11NetWmWindowTypeDND</enumerator>
            <enumerator value="117">WA_MacFrameworkScaled</enumerator>
            <enumerator value="118">WA_SetWindowModality</enumerator>
            <enumerator value="119">WA_WState_WindowOpacitySet</enumerator>
            <enumerator value="120">WA_TranslucentBackground</enumerator>
            <enumerator value="121">WA_AcceptTouchEvents</enumerator>
            <enumerator value="122">WA_WState_AcceptedTouchBeginEvent</enumerator>
            <enumerator value="123">WA_TouchPadAcceptSingleTouchEvents</enumerator>
            <enumerator value="126">WA_X11DoNotAcceptFocus</enumerator>
            <enumerator value="127">WA_MacNoShadow</enumerator>
            <enumerator >WA_AttributeCount</enumerator>
        </enum>
        <enum name="Qt::TouchPointState">
            <accessPolicy value="public"/>
            <enumerator value="0x01">TouchPointPressed</enumerator>
            <enumerator value="0x02">TouchPointMoved</enumerator>
            <enumerator value="0x04">TouchPointStationary</enumerator>
            <enumerator value="0x08">TouchPointReleased</enumerator>
        </enum>
        <enum name="Qt::TextInteractionFlag">
            <accessPolicy value="public"/>
            <enumerator value="0">NoTextInteraction</enumerator>
            <enumerator value="1">TextSelectableByMouse</enumerator>
            <enumerator value="2">TextSelectableByKeyboard</enumerator>
            <enumerator value="4">LinksAccessibleByMouse</enumerator>
            <enumerator value="8">LinksAccessibleByKeyboard</enumerator>
            <enumerator value="16">TextEditable</enumerator>
            <enumerator value="TextSelectableByMouse|TextSelectableByKeyboard|TextEditable">TextEditorInteraction</enumerator>
            <enumerator value="TextSelectableByMouse|LinksAccessibleByMouse|LinksAccessibleByKeyboard">TextBrowserInteraction</enumerator>
        </enum>
        <enum name="Qt::MouseButton">
            <accessPolicy value="public"/>
            <enumerator value="0x00000000">NoButton</enumerator>
            <enumerator value="0x00000001">LeftButton</enumerator>
            <enumerator value="0x00000002">RightButton</enumerator>
            <enumerator value="0x00000004">MidButton</enumerator>
            <enumerator value="MidButton">MiddleButton</enumerator>
            <enumerator value="0x00000008">BackButton</enumerator>
            <enumerator value="BackButton">XButton1</enumerator>
            <enumerator value="XButton1">ExtraButton1</enumerator>
            <enumerator value="0x00000010">ForwardButton</enumerator>
            <enumerator value="ForwardButton">XButton2</enumerator>
            <enumerator value="ForwardButton">ExtraButton2</enumerator>
            <enumerator value="0x00000020">TaskButton</enumerator>
            <enumerator value="TaskButton">ExtraButton3</enumerator>
            <enumerator value="0x00000040">ExtraButton4</enumerator>
            <enumerator value="0x00000080">ExtraButton5</enumerator>
            <enumerator value="0x00000100">ExtraButton6</enumerator>
            <enumerator value="0x00000200">ExtraButton7</enumerator>
            <enumerator value="0x00000400">ExtraButton8</enumerator>
            <enumerator value="0x00000800">ExtraButton9</enumerator>
            <enumerator value="0x00001000">ExtraButton10</enumerator>
            <enumerator value="0x00002000">ExtraButton11</enumerator>
            <enumerator value="0x00004000">ExtraButton12</enumerator>
            <enumerator value="0x00008000">ExtraButton13</enumerator>
            <enumerator value="0x00010000">ExtraButton14</enumerator>
            <enumerator value="0x00020000">ExtraButton15</enumerator>
            <enumerator value="0x00040000">ExtraButton16</enumerator>
            <enumerator value="0x00080000">ExtraButton17</enumerator>
            <enumerator value="0x00100000">ExtraButton18</enumerator>
            <enumerator value="0x00200000">ExtraButton19</enumerator>
            <enumerator value="0x00400000">ExtraButton20</enumerator>
            <enumerator value="0x00800000">ExtraButton21</enumerator>
            <enumerator value="0x01000000">ExtraButton22</enumerator>
            <enumerator value="0x02000000">ExtraButton23</enumerator>
            <enumerator value="0x04000000">ExtraButton24</enumerator>
            <enumerator value="0x07ffffff">AllButtons</enumerator>
            <enumerator value="ExtraButton24">MaxMouseButton</enumerator>
            <enumerator value="0xffffffff">MouseButtonMask</enumerator>
        </enum>
        <enum name="Qt::MatchFlag">
            <accessPolicy value="public"/>
            <enumerator value="0">MatchExactly</enumerator>
            <enumerator value="1">MatchContains</enumerator>
            <enumerator value="2">MatchStartsWith</enumerator>
            <enumerator value="3">MatchEndsWith</enumerator>
            <enumerator value="4">MatchRegExp</enumerator>
            <enumerator value="5">MatchWildcard</enumerator>
            <enumerator value="8">MatchFixedString</enumerator>
            <enumerator value="16">MatchCaseSensitive</enumerator>
            <enumerator value="32">MatchWrap</enumerator>
            <enumerator value="64">MatchRecursive</enumerator>
        </enum>
        <enum name="Qt::PenCapStyle">
            <accessPolicy value="public"/>
            <enumerator value="0x00">FlatCap</enumerator>
            <enumerator value="0x10">SquareCap</enumerator>
            <enumerator value="0x20">RoundCap</enumerator>
            <enumerator value="0x30">MPenCapStyle</enumerator>
        </enum>
        <enum name="Qt::TextElideMode">
            <accessPolicy value="public"/>
            <enumerator >ElideLeft</enumerator>
            <enumerator >ElideRight</enumerator>
            <enumerator >ElideMiddle</enumerator>
            <enumerator >ElideNone</enumerator>
        </enum>
    </namespace>
    <class name="QGraphicsItem">
        <inherits />
        <enum name="QGraphicsItem::CacheMode">
            <accessPolicy value="public"/>
            <enumerator >NoCache</enumerator>
            <enumerator >ItemCoordinateCache</enumerator>
            <enumerator >DeviceCoordinateCache</enumerator>
        </enum>
        <enum name="QGraphicsItem::PanelModality">
            <accessPolicy value="public"/>
            <enumerator >NonModal</enumerator>
            <enumerator >PanelModal</enumerator>
            <enumerator >SceneModal</enumerator>
        </enum>
        <enum >
            <anonymous />
            <accessPolicy value="public"/>
            <enumerator value="1">Type</enumerator>
            <enumerator value="65536">UserType</enumerator>
        </enum>
        <enum name="QGraphicsItem::GraphicsItemFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x1">ItemIsMovable</enumerator>
            <enumerator value="0x2">ItemIsSelectable</enumerator>
            <enumerator value="0x4">ItemIsFocusable</enumerator>
            <enumerator value="0x8">ItemClipsToShape</enumerator>
            <enumerator value="0x10">ItemClipsChildrenToShape</enumerator>
            <enumerator value="0x20">ItemIgnoresTransformations</enumerator>
            <enumerator value="0x40">ItemIgnoresParentOpacity</enumerator>
            <enumerator value="0x80">ItemDoesntPropagateOpacityToChildren</enumerator>
            <enumerator value="0x100">ItemStacksBehindParent</enumerator>
            <enumerator value="0x200">ItemUsesExtendedStyleOption</enumerator>
            <enumerator value="0x400">ItemHasNoContents</enumerator>
            <enumerator value="0x800">ItemSendsGeometryChanges</enumerator>
            <enumerator value="0x1000">ItemAcceptsInputMethod</enumerator>
            <enumerator value="0x2000">ItemNegativeZStacksBehindParent</enumerator>
            <enumerator value="0x4000">ItemIsPanel</enumerator>
            <enumerator value="0x8000">ItemIsFocusScope</enumerator>
            <enumerator value="0x10000">ItemSendsScenePositionChanges</enumerator>
            <enumerator value="0x20000">ItemStopsClickFocusPropagation</enumerator>
            <enumerator value="0x40000">ItemStopsFocusHandling</enumerator>
        </enum>
        <enum name="QGraphicsItem::GraphicsItemChange">
            <accessPolicy value="public"/>
            <enumerator >ItemPositionChange</enumerator>
            <enumerator >ItemMatrixChange</enumerator>
            <enumerator >ItemVisibleChange</enumerator>
            <enumerator >ItemEnabledChange</enumerator>
            <enumerator >ItemSelectedChange</enumerator>
            <enumerator >ItemParentChange</enumerator>
            <enumerator >ItemChildAddedChange</enumerator>
            <enumerator >ItemChildRemovedChange</enumerator>
            <enumerator >ItemTransformChange</enumerator>
            <enumerator >ItemPositionHasChanged</enumerator>
            <enumerator >ItemTransformHasChanged</enumerator>
            <enumerator >ItemSceneChange</enumerator>
            <enumerator >ItemVisibleHasChanged</enumerator>
            <enumerator >ItemEnabledHasChanged</enumerator>
            <enumerator >ItemSelectedHasChanged</enumerator>
            <enumerator >ItemParentHasChanged</enumerator>
            <enumerator >ItemSceneHasChanged</enumerator>
            <enumerator >ItemCursorChange</enumerator>
            <enumerator >ItemCursorHasChanged</enumerator>
            <enumerator >ItemToolTipChange</enumerator>
            <enumerator >ItemToolTipHasChanged</enumerator>
            <enumerator >ItemFlagsChange</enumerator>
            <enumerator >ItemFlagsHaveChanged</enumerator>
            <enumerator >ItemZValueChange</enumerator>
            <enumerator >ItemZValueHasChanged</enumerator>
            <enumerator >ItemOpacityChange</enumerator>
            <enumerator >ItemOpacityHasChanged</enumerator>
            <enumerator >ItemScenePositionHasChanged</enumerator>
            <enumerator >ItemRotationChange</enumerator>
            <enumerator >ItemRotationHasChanged</enumerator>
            <enumerator >ItemScaleChange</enumerator>
            <enumerator >ItemScaleHasChanged</enumerator>
            <enumerator >ItemTransformOriginPointChange</enumerator>
            <enumerator >ItemTransformOriginPointHasChanged</enumerator>
        </enum>
        <enum name="QGraphicsItem::Extension">
            <accessPolicy value="protected"/>
            <enumerator value="0x80000000">UserExtension</enumerator>
        </enum>
        <function name="unsetCursor">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="false" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setX">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="collidesWithPath">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IntersectsItemShape" type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setY">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="boundingRegion">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRegion" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusOutEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAcceptTouchEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="Qt::OtherFocusReason" type="Qt::FocusReason" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="cacheMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem::CacheMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="moveBy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="removeFromIndex">
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensureVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensureVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childrenBoundingRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="transformOriginPoint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabKeyboard">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="opaqueArea">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="opacity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::GraphicsItemFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resetMatrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="toolTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ungrabKeyboard">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsScene" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setOpacity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocusProxy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragEnterEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneDragDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSelected">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="zValue">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="flags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem::GraphicsItemFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ungrabMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scroll">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="commonAncestorItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="parentItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resetTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="extension">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="qt_closestLeaf">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBoundingRegionGranularity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="acceptHoverEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="boundingRect">
            <accessPolicy value="public"/>
            <modifiers >
                <abstract />
                <virtual />
            </modifiers>
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setParentItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="topLevelWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childItems">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QList&lt;QGraphicsItem*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paint">
            <accessPolicy value="public"/>
            <modifiers >
                <abstract />
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QStyleOptionGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneBoundingRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="updateMicroFocus">
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAcceptHoverEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="deviceTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAcceptDrops">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTransformations">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QList&lt;QGraphicsTransform*&gt;" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addToIndex">
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isUnderMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemChange">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem::GraphicsItemChange" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scenePos">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="collidingItems">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="Qt::IntersectsItemShape" type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QList&lt;QGraphicsItem*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setData">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTransformOriginPoint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTransformOriginPoint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setGraphicsEffect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsEffect" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isPanel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setToolTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="prepareGeometryChange">
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setPos">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setPos">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusScopeItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setPanelModality">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::PanelModality" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="toGraphicsObject">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsObject" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="toGraphicsObject">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="removeSceneEventFilter">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMatrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QMatrix" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="false" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="panelModality">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem::PanelModality" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setInputMethodHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::InputMethodHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="parentObject">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setActive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="collidesWithItem">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IntersectsItemShape" type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneDragDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="topLevelItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setZValue">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="x">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="effectiveOpacity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="y">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isActive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="stackBefore">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="rotation">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseDoubleClickEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneEventFilter">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="matrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QMatrix" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isObscuredBy">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragLeaveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneDragDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFlag">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::GraphicsItemFlag" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="clipPath">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="advance">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="acceptDrops">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFiltersChildEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isVisibleTo">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hoverMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneHoverEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="boundingRegionGranularity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hoverEnterEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneHoverEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setRotation">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="supportsExtension">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem::Extension" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="handlesChildEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="group">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItemGroup" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dropEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneDragDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusInEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setHandlesChildEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isAncestorOf">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QGraphicsItem">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsItem">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItemPrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="type">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="panel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyPressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isBlockedByModalPanel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QGraphicsItem" indirections="2" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="filtersChildEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="wheelEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneWheelEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QInputMethodEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="parentWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="installSceneEventFilter">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setCacheMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::CacheMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QSize()" type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAcceptedMouseButtons">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::MouseButtons" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="transform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hide">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasCursor">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="transformations">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QList&lt;QGraphicsTransform*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="acceptTouchEvents">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="bool" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isObscured">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isObscured">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneMatrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QMatrix" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setGroup">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItemGroup" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectToItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mousePressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="show">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::InputMethodHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contextMenuEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneContextMenuEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="clearFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="graphicsEffect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsEffect" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hoverLeaveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneHoverEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isClipped">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setExtension">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsItem::Extension" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="pos">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="qt_closestItemFirst">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contains">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isSelected">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodQuery">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="Qt::InputMethodQuery" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="window">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="shape">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setScale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusProxy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="acceptedMouseButtons">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::MouseButtons" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapRectFromItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="data">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
    </class>
    <class name="QFrame">
        <inherits >
            <class name="QWidget"/>
        </inherits>
        <enum name="QFrame::StyleMask">
            <accessPolicy value="public"/>
            <enumerator value="0x00f0">Shadow_Mask</enumerator>
            <enumerator value="0x000f">Shape_Mask</enumerator>
        </enum>
        <enum name="QFrame::Shape">
            <accessPolicy value="public"/>
            <enumerator value="0">NoFrame</enumerator>
            <enumerator value="0x0001">Box</enumerator>
            <enumerator value="0x0002">Panel</enumerator>
            <enumerator value="0x0003">WinPanel</enumerator>
            <enumerator value="0x0004">HLine</enumerator>
            <enumerator value="0x0005">VLine</enumerator>
            <enumerator value="0x0006">StyledPanel</enumerator>
        </enum>
        <enum name="QFrame::Shadow">
            <accessPolicy value="public"/>
            <enumerator value="0x0010">Plain</enumerator>
            <enumerator value="0x0020">Raised</enumerator>
            <enumerator value="0x0030">Sunken</enumerator>
        </enum>
        <function name="event">
            <modifiers />
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFrameShadow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QFrame::Shadow" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="frameRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="frameWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="lineWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QFrame">
            <modifiers />
            <arguments >
                <argument type="QFrame" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QFrame">
            <modifiers />
            <arguments >
                <argument type="QFramePrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QFrame">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="setFrameRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFrameShape">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QFrame::Shape" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sizeHint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setLineWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawFrame">
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <property name="frameShape">
            <read value="frameShape"/>
            <write value="setFrameShape"/>
        </property>
        <property name="frameShadow">
            <read value="frameShadow"/>
            <write value="setFrameShadow"/>
        </property>
        <property name="lineWidth">
            <read value="lineWidth"/>
            <write value="setLineWidth"/>
        </property>
        <property name="midLineWidth">
            <read value="midLineWidth"/>
            <write value="setMidLineWidth"/>
        </property>
        <property name="frameWidth">
            <read value="frameWidth"/>
        </property>
        <property name="frameRect">
            <read value="frameRect"/>
            <write value="setFrameRect"/>
            <designable value="false"/>
        </property>
    </class>
    <class name="QPixmap">
        <inherits >
            <class name="QPaintDevice"/>
        </inherits>
        <function name="width">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scroll">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QRegion" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scroll">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QRegion" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="operator&gt;&gt;">
            <modifiers />
            <arguments >
                <argument type="QDataStream" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QDataStream" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="size">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="load">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="detach">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="doInit">
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fill">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPaintDevice" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fill">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPaintDevice" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fill">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="Qt::white" type="QColor" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBitmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scaledToHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fromImage">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QImage" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasAlpha">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasAlphaChannel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="rect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="transformed">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="transformed">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QMatrix" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paintEngine">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPaintEngine" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="height">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="trueMatrix">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="trueMatrix">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QMatrix" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QMatrix" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBitmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="depth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scaled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IgnoreAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scaled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IgnoreAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="loadFromData">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QByteArray" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="loadFromData">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="uchar" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="uint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="convertFromImage">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QImage" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="toImage">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QImage" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isNull">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scaledToWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::FastTransformation" type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QPixmap">
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::AutoColor" type="Qt::ImageConversionFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPlatformPixmap" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
        </constructor>
        <function name="grabWidget">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="-1" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="-1" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabWidget">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="swap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="copy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRect()" type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="copy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
    </class>
    <class name="QAbstractScrollArea">
        <inherits >
            <class name="QFrame"/>
        </inherits>
        <function name="maximumViewportSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setVerticalScrollBarPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::ScrollBarPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QAbstractScrollArea">
            <modifiers />
            <arguments >
                <argument type="QAbstractScrollArea" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QAbstractScrollArea">
            <modifiers />
            <arguments >
                <argument type="QAbstractScrollAreaPrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QAbstractScrollArea">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="wheelEvent">
            <modifiers />
            <arguments >
                <argument type="QWheelEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="viewportSizeHint">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sizeHint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="cornerWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseMoveEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setupViewport">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseDoubleClickEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scrollContentsBy">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setViewportMargins">
            <modifiers />
            <arguments >
                <argument type="QMargins" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setViewportMargins">
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contextMenuEvent">
            <modifiers />
            <arguments >
                <argument type="QContextMenuEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseReleaseEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="viewport">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setViewport">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragLeaveEvent">
            <modifiers />
            <arguments >
                <argument type="QDragLeaveEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setHorizontalScrollBarPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::ScrollBarPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scrollBarWidgets">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::Alignment" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidgetList" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragEnterEvent">
            <modifiers />
            <arguments >
                <argument type="QDragEnterEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addScrollBarWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="Qt::Alignment" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragMoveEvent">
            <modifiers />
            <arguments >
                <argument type="QDragMoveEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paintEvent">
            <modifiers />
            <arguments >
                <argument type="QPaintEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dropEvent">
            <modifiers />
            <arguments >
                <argument type="QDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resizeEvent">
            <modifiers />
            <arguments >
                <argument type="QResizeEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="minimumSizeHint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="event">
            <modifiers />
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="eventFilter">
            <modifiers />
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyPressEvent">
            <modifiers />
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="viewportEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setCornerWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mousePressEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <property name="verticalScrollBarPolicy">
            <read value="verticalScrollBarPolicy"/>
            <write value="setVerticalScrollBarPolicy"/>
        </property>
        <property name="horizontalScrollBarPolicy">
            <read value="horizontalScrollBarPolicy"/>
            <write value="setHorizontalScrollBarPolicy"/>
        </property>
    </class>
    <class name="QObject">
        <inherits />
        <function name="senderSignalIndex">
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setProperty">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="destroyed">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <function name="parent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isWindowType">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="timerEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QTimerEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="children">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QObjectList" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sender">
            <modifiers />
            <arguments />
            <return type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="killTimer">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setObjectName">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inherits">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QObject">
            <modifiers />
            <arguments >
                <argument type="QObject" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QObject">
            <modifiers />
            <arguments >
                <argument type="QObjectPrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QObject">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="customEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="startTimer">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::CoarseTimer" type="Qt::TimerType" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="blockSignals">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="property">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="char" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="event">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="eventFilter">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QChildEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="objectName">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="objectNameChanged">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPrivateSignal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <property name="objectName">
            <read value="objectName"/>
            <write value="setObjectName"/>
        </property>
    </class>
    <class name="QWidget">
        <inherits >
            <class name="QObject"/>
            <class name="QPaintDevice"/>
        </inherits>
        <enum name="QWidget::RenderFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x1">DrawWindowBackground</enumerator>
            <enumerator value="0x2">DrawChildren</enumerator>
            <enumerator value="0x4">IgnoreMask</enumerator>
        </enum>
        <function name="setMaximumHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isEnabledToTLW">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBaseSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBaseSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="getContentsMargins">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAttribute">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WidgetAttribute" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabKeyboard">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="repaint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRegion" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="repaint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="repaint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="repaint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="setFixedWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyboardGrabber">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setStatusTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="previousInFocusChain">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMinimumWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="find">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="WId" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="destroy">
            <modifiers />
            <arguments >
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabGesture">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::GestureType" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::GestureFlags()" type="Qt::GestureFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSizeIncrement">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSizeIncrement">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setPalette">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPalette" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTabOrder">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dropEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QDropEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowOpacity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="backingStore">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBackingStore" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowRole">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setShortcutEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isMinimized">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusNextChild">
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowOpacity">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="palette">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPalette" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="rect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isMaximized">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isHidden">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMouseTracking">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAutoFillBackground">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="saveGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QByteArray" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabShortcut">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QKeySequence" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::WindowShortcut" type="Qt::ShortcutContext" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="styleSheet">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowFilePath">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMaximumWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::FocusPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowIconText">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hideEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QHideEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowTitle">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setToolTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="releaseKeyboard">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="locale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QLocale" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paintEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPaintEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="x">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="y">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="topLevelWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="cursor">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QCursor" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromGlobal">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="minimumSizeHint">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="customContextMenuRequested">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <function name="setFocusProxy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="width">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowIcon">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QIcon" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QInputMethodEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isActiveWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setCursor">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QCursor" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setLayout">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QLayout" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isFullScreen">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="releaseMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setLocale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QLocale" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isTopLevel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sizeIncrement">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="move">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="move">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setWindowModified">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="devType">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocusPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::FocusPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="frameSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusInEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAccessibleDescription">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="layout">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QLayout" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="wheelEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QWheelEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMinimumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMinimumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToGlobal">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="clearMask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setUpdatesEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="heightForWidth">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRegion" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="maximumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFixedHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="testAttribute_helper">
            <modifiers />
            <arguments >
                <argument type="Qt::WidgetAttribute" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isWindowModified">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="showEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QShowEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowIcon">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QIcon" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="restoreGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QByteArray" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resizeEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QResizeEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="overrideWindowState">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WindowStates" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowHandle">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWindow" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="updateMicroFocus">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="whatsThis">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="nextInFocusChain">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isVisibleTo">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="redirected">
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPaintDevice" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapTo">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="window">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childrenRegion">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRegion" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="unsetCursor">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QCursor" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grabMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="showMinimized">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="dragMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QDragMoveEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setVisible">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="overrideWindowFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="updateGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="moveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QMoveEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="accessibleDescription">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="close">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="setContextMenuPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::ContextMenuPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="minimumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="maximumHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusOutEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="accessibleName">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowState">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WindowStates" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="hide">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="visibleRegion">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRegion" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWhatsThis">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="unsetLayoutDirection">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="underMouse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="minimumHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusNextPrevChild">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setShortcutAutoRepeat">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="showFullScreen">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="addAction">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QAction" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fontInfo">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QFontInfo" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isAncestorOf">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMaximumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMaximumSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="normalGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSizePolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSizePolicy::Policy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QSizePolicy::Policy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSizePolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSizePolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="actionEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QActionEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="releaseShortcut">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseGrabber">
            <accessPolicy value="public"/>
            <modifiers >
                <static />
            </modifiers>
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusProxy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="event">
            <modifiers />
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAcceptDrops">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="tabletEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QTabletEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isEnabledTo">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="baseSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="toolTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowModality">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WindowModality" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowModality">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::WindowModality" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isLeftToRight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contentsRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="maximumWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mousePressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sizeHint">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowIconText">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMinimumHeight">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="size">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contextMenuPolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::ContextMenuPolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowRole">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setGraphicsEffect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsEffect" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="lower">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="ungrabGesture">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::GestureType" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isModal">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="style">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QStyle" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusPreviousChild">
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="pos">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromParent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="testAttribute">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::WidgetAttribute" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasMouseTracking">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setWindowFilePath">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="initPainter">
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="qt_widget_private">
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidgetPrivate" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contentsMargins">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QMargins" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="activateWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="autoFillBackground">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBackingStore">
            <modifiers />
            <arguments >
                <argument type="QBackingStore" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRegion" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="qt_qwidget_data">
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QWidgetData" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="internalWinId">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="WId" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAccessibleName">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="updatesEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sharedPainter">
            <modifiers />
            <arguments />
            <return type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="createWinId">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setInputMethodHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::InputMethodHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="unsetLocale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodQuery">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="Qt::InputMethodQuery" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="effectiveWinId">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="WId" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="frameGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setDisabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="keyPressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setLayoutDirection">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::LayoutDirection" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowState">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::WindowStates" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contextMenuEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QContextMenuEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QWidget">
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QWidget">
            <modifiers />
            <arguments >
                <argument type="QWidgetPrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="setGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setGeometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFixedSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFixedSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QSize" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="parentWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="render">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPoint()" type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRegion()" type="QRegion" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="RenderFlags(DrawWindowBackground | DrawChildren)" type="QWidget::RenderFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="render">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPaintDevice" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPoint()" type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRegion()" type="QRegion" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="RenderFlags(DrawWindowBackground | DrawChildren)" type="QWidget::RenderFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="stackUnder">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="adjustSize">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="graphicsEffect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsEffect" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::FocusReason" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="acceptDrops">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="changeEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragEnterEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QDragEnterEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="raise">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <slot name="show">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="winId">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="WId" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setStyle">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QStyle" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="takeLayout">
            <modifiers />
            <arguments />
            <return type="QLayout" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="metric">
            <modifiers />
            <arguments >
                <argument type="QPaintDevice::PaintDeviceMetric" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="leaveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRegion" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMask">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBitmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="height">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="showMaximized">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="clearFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="enterEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::InputMethodHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="nativeParentWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="windowType">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::WindowType" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setContentsMargins">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QMargins" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setContentsMargins">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setStyleSheet">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="graphicsProxyWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsProxyWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="geometry">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensurePolished">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scroll">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scroll">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isRightToLeft">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setWindowTitle">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="paintEngine">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPaintEngine" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="statusTip">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QString" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="nativeEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QByteArray" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="void" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="long" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="grab">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRect(QPoint(0, 0), QSize(-1, -1))" type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="dragLeaveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QDragLeaveEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="create">
            <modifiers />
            <arguments >
                <argument default="0" type="WId" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="layoutDirection">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::LayoutDirection" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="minimumWidth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseDoubleClickEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFrom">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasHeightForWidth">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="showNormal">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <slot name="setHidden">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="sizePolicy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSizePolicy" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="closeEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QCloseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="childrenRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRect" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <property name="modal">
            <read value="isModal"/>
        </property>
        <property name="windowModality">
            <read value="windowModality"/>
            <write value="setWindowModality"/>
        </property>
        <property name="enabled">
            <read value="isEnabled"/>
            <write value="setEnabled"/>
        </property>
        <property name="geometry">
            <read value="geometry"/>
            <write value="setGeometry"/>
        </property>
        <property name="frameGeometry">
            <read value="frameGeometry"/>
        </property>
        <property name="normalGeometry">
            <read value="normalGeometry"/>
        </property>
        <property name="x">
            <read value="x"/>
        </property>
        <property name="y">
            <read value="y"/>
        </property>
        <property name="pos">
            <read value="pos"/>
            <write value="move"/>
            <designable value="false"/>
        </property>
        <property name="frameSize">
            <read value="frameSize"/>
        </property>
        <property name="size">
            <read value="size"/>
            <write value="resize"/>
            <designable value="false"/>
        </property>
        <property name="width">
            <read value="width"/>
        </property>
        <property name="height">
            <read value="height"/>
        </property>
        <property name="rect">
            <read value="rect"/>
        </property>
        <property name="childrenRect">
            <read value="childrenRect"/>
        </property>
        <property name="childrenRegion">
            <read value="childrenRegion"/>
        </property>
        <property name="sizePolicy">
            <read value="sizePolicy"/>
            <write value="setSizePolicy"/>
        </property>
        <property name="minimumSize">
            <read value="minimumSize"/>
            <write value="setMinimumSize"/>
        </property>
        <property name="maximumSize">
            <read value="maximumSize"/>
            <write value="setMaximumSize"/>
        </property>
        <property name="minimumWidth">
            <read value="minimumWidth"/>
            <write value="setMinimumWidth"/>
            <designable value="false"/>
        </property>
        <property name="minimumHeight">
            <read value="minimumHeight"/>
            <write value="setMinimumHeight"/>
            <designable value="false"/>
        </property>
        <property name="maximumWidth">
            <read value="maximumWidth"/>
            <write value="setMaximumWidth"/>
            <designable value="false"/>
        </property>
        <property name="maximumHeight">
            <read value="maximumHeight"/>
            <write value="setMaximumHeight"/>
            <designable value="false"/>
        </property>
        <property name="sizeIncrement">
            <read value="sizeIncrement"/>
            <write value="setSizeIncrement"/>
        </property>
        <property name="baseSize">
            <read value="baseSize"/>
            <write value="setBaseSize"/>
        </property>
        <property name="palette">
            <read value="palette"/>
            <write value="setPalette"/>
        </property>
        <property name="font">
            <read value="font"/>
            <write value="setFont"/>
        </property>
        <property name="cursor">
            <read value="cursor"/>
            <write value="setCursor"/>
            <reset value="unsetCursor"/>
        </property>
        <property name="mouseTracking">
            <read value="hasMouseTracking"/>
            <write value="setMouseTracking"/>
        </property>
        <property name="isActiveWindow">
            <read value="isActiveWindow"/>
        </property>
        <property name="focusPolicy">
            <read value="focusPolicy"/>
            <write value="setFocusPolicy"/>
        </property>
        <property name="focus">
            <read value="hasFocus"/>
        </property>
        <property name="contextMenuPolicy">
            <read value="contextMenuPolicy"/>
            <write value="setContextMenuPolicy"/>
        </property>
        <property name="updatesEnabled">
            <read value="updatesEnabled"/>
            <write value="setUpdatesEnabled"/>
            <designable value="false"/>
        </property>
        <property name="visible">
            <read value="isVisible"/>
            <write value="setVisible"/>
            <designable value="false"/>
        </property>
        <property name="minimized">
            <read value="isMinimized"/>
        </property>
        <property name="maximized">
            <read value="isMaximized"/>
        </property>
        <property name="fullScreen">
            <read value="isFullScreen"/>
        </property>
        <property name="sizeHint">
            <read value="sizeHint"/>
        </property>
        <property name="minimumSizeHint">
            <read value="minimumSizeHint"/>
        </property>
        <property name="acceptDrops">
            <read value="acceptDrops"/>
            <write value="setAcceptDrops"/>
        </property>
        <property name="windowTitle">
            <read value="windowTitle"/>
            <write value="setWindowTitle"/>
            <designable value="isWindow"/>
        </property>
        <property name="windowIcon">
            <read value="windowIcon"/>
            <write value="setWindowIcon"/>
            <designable value="isWindow"/>
        </property>
        <property name="windowIconText">
            <read value="windowIconText"/>
            <write value="setWindowIconText"/>
            <designable value="isWindow"/>
        </property>
        <property name="windowOpacity">
            <read value="windowOpacity"/>
            <write value="setWindowOpacity"/>
            <designable value="isWindow"/>
        </property>
        <property name="windowModified">
            <read value="isWindowModified"/>
            <write value="setWindowModified"/>
            <designable value="isWindow"/>
        </property>
        <property name="toolTip">
            <read value="toolTip"/>
            <write value="setToolTip"/>
        </property>
        <property name="statusTip">
            <read value="statusTip"/>
            <write value="setStatusTip"/>
        </property>
        <property name="whatsThis">
            <read value="whatsThis"/>
            <write value="setWhatsThis"/>
        </property>
        <property name="accessibleName">
            <read value="accessibleName"/>
            <write value="setAccessibleName"/>
        </property>
        <property name="accessibleDescription">
            <read value="accessibleDescription"/>
            <write value="setAccessibleDescription"/>
        </property>
        <property name="layoutDirection">
            <read value="layoutDirection"/>
            <write value="setLayoutDirection"/>
            <reset value="unsetLayoutDirection"/>
        </property>
        <property name="autoFillBackground">
            <read value="autoFillBackground"/>
            <write value="setAutoFillBackground"/>
        </property>
        <property name="styleSheet">
            <read value="styleSheet"/>
            <write value="setStyleSheet"/>
        </property>
        <property name="locale">
            <read value="locale"/>
            <write value="setLocale"/>
            <reset value="unsetLocale"/>
        </property>
        <property name="windowFilePath">
            <read value="windowFilePath"/>
            <write value="setWindowFilePath"/>
            <designable value="isWindow"/>
        </property>
        <property name="inputMethodHints">
            <read value="inputMethodHints"/>
            <write value="setInputMethodHints"/>
        </property>
    </class>
    <class name="QPaintDevice">
        <inherits />
        <enum name="QPaintDevice::PaintDeviceMetric">
            <accessPolicy value="public"/>
            <enumerator value="1">PdmWidth</enumerator>
            <enumerator >PdmHeight</enumerator>
            <enumerator >PdmWidthMM</enumerator>
            <enumerator >PdmHeightMM</enumerator>
            <enumerator >PdmNumColors</enumerator>
            <enumerator >PdmDepth</enumerator>
            <enumerator >PdmDpiX</enumerator>
            <enumerator >PdmDpiY</enumerator>
            <enumerator >PdmPhysicalDpiX</enumerator>
            <enumerator >PdmPhysicalDpiY</enumerator>
        </enum>
        <function name="depth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="initPainter">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sharedPainter">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments />
            <return type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="widthMM">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="redirected">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPoint" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPaintDevice" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="width">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="heightMM">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paintEngine">
            <accessPolicy value="public"/>
            <modifiers >
                <abstract />
                <virtual />
            </modifiers>
            <arguments />
            <return type="QPaintEngine" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QPaintDevice">
            <modifiers />
            <arguments >
                <argument type="QPaintDevice" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QPaintDevice">
            <modifiers />
            <arguments />
        </constructor>
        <function name="paintingActive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="colorCount">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="height">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
    </class>
    <class name="QGraphicsPixmapItem">
        <inherits >
            <class name="QGraphicsItem"/>
        </inherits>
        <enum name="QGraphicsPixmapItem::ShapeMode">
            <accessPolicy value="public"/>
            <enumerator >MaskShape</enumerator>
            <enumerator >BoundingRectShape</enumerator>
            <enumerator >HeuristicMaskShape</enumerator>
        </enum>
        <enum >
            <anonymous />
            <accessPolicy value="public"/>
            <enumerator value="7">Type</enumerator>
        </enum>
        <function name="setExtension">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::Extension" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setTransformationMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::TransformationMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setOffset">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setOffset">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="shape">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contains">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="paint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QStyleOptionGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isObscuredBy">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QGraphicsPixmapItem">
            <modifiers />
            <arguments >
                <argument type="QGraphicsPixmapItem" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsPixmapItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsPixmapItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="extension">
            <modifiers />
            <arguments >
                <argument type="QVariant" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="opaqueArea">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="pixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPixmap" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="boundingRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="supportsExtension">
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem::Extension" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="offset">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
    </class>
    <class name="QGraphicsScene">
        <inherits >
            <class name="QObject"/>
        </inherits>
        <enum name="QGraphicsScene::SceneLayer">
            <accessPolicy value="public"/>
            <enumerator value="0x1">ItemLayer</enumerator>
            <enumerator value="0x2">BackgroundLayer</enumerator>
            <enumerator value="0x4">ForegroundLayer</enumerator>
            <enumerator value="0xffff">AllLayers</enumerator>
        </enum>
        <enum name="QGraphicsScene::ItemIndexMethod">
            <accessPolicy value="public"/>
            <enumerator >BspTreeIndex</enumerator>
            <enumerator value="-1">NoIndex</enumerator>
        </enum>
        <function name="eventFilter">
            <modifiers />
            <arguments >
                <argument type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="clearFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="sceneRectChanged">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <function name="render">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::KeepAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="selectedItems">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QList&lt;QGraphicsItem*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addSimpleText">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QFont()" type="QFont" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsSimpleTextItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="bspTreeDepth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyPressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="width">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setStickyFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="clear">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <constructor name="QGraphicsScene">
            <modifiers />
            <arguments >
                <argument type="QGraphicsScene" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QObject" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="focusItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseGrabberItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mousePressEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="hasFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSelectionArea">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IntersectsItemShape" type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QTransform()" type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSelectionArea">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="foregroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBrush" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="views">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QList&lt;QGraphicsView*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawItems">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QStyleOptionGraphicsItem" indirections="0" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSortCacheEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="changed">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="QList&lt;QRectF&gt;" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <function name="destroyItemGroup">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItemGroup" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsRectItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsRectItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="activeWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="selectionArea">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawForeground">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setActivePanel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="helpEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneHelpEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addText">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QString" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QFont()" type="QFont" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsTextItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addPolygon">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsPolygonItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodQuery">
            <accessPolicy value="public"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="Qt::InputMethodQuery" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QVariant" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setItemIndexMethod">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsScene::ItemIndexMethod" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="update">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusInEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="stickyFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="clearSelection">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="createItemGroup">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QList&lt;QGraphicsItem*&gt;" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItemGroup" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <signal name="selectionChanged">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </signal>
        <function name="mouseDoubleClickEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addEllipse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsEllipseItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addEllipse">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsEllipseItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseMoveEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyReleaseEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addPixmap">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPixmap" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsPixmapItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="inputMethodEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QInputMethodEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isSortCacheEnabled">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="invalidate">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="AllLayers" type="QGraphicsScene::SceneLayers" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="invalidate">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="AllLayers" type="QGraphicsScene::SceneLayers" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addLine">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsLineItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addLine">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QLineF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsLineItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBspTreeDepth">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="advance">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="setActiveWindow">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="activePanel">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setForegroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isActive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sendEvent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawBackground">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocus">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="Qt::OtherFocusReason" type="Qt::FocusReason" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBackgroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="contextMenuEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneContextMenuEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setFocusItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::OtherFocusReason" type="Qt::FocusReason" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="wheelEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QGraphicsSceneWheelEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemsBoundingRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusOutEvent">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="backgroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBrush" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addPath">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QPen()" type="QPen" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QBrush()" type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsPathItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="addWidget">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="Qt::WindowFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsProxyWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="height">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="focusNextPrevChild">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="collidingItems">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IntersectsItemShape" type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QList&lt;QGraphicsItem*&gt;" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="event">
            <modifiers />
            <arguments >
                <argument type="QEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="removeItem">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <property name="backgroundBrush">
            <read value="backgroundBrush"/>
            <write value="setBackgroundBrush"/>
        </property>
        <property name="foregroundBrush">
            <read value="foregroundBrush"/>
            <write value="setForegroundBrush"/>
        </property>
        <property name="itemIndexMethod">
            <read value="itemIndexMethod"/>
            <write value="setItemIndexMethod"/>
        </property>
        <property name="sceneRect">
            <read value="sceneRect"/>
            <write value="setSceneRect"/>
        </property>
        <property name="bspTreeDepth">
            <read value="bspTreeDepth"/>
            <write value="setBspTreeDepth"/>
        </property>
        <property name="palette">
            <read value="palette"/>
            <write value="setPalette"/>
        </property>
        <property name="font">
            <read value="font"/>
            <write value="setFont"/>
        </property>
        <property name="sortCacheEnabled">
            <read value="isSortCacheEnabled"/>
            <write value="setSortCacheEnabled"/>
        </property>
        <property name="stickyFocus">
            <read value="stickyFocus"/>
            <write value="setStickyFocus"/>
        </property>
    </class>
    <class name="QGraphicsView">
        <inherits >
            <class name="QAbstractScrollArea"/>
        </inherits>
        <enum name="QGraphicsView::OptimizationFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x1">DontClipPainter</enumerator>
            <enumerator value="0x2">DontSavePainterState</enumerator>
            <enumerator value="0x4">DontAdjustForAntialiasing</enumerator>
            <enumerator value="0x8">IndirectPainting</enumerator>
        </enum>
        <enum name="QGraphicsView::ViewportAnchor">
            <accessPolicy value="public"/>
            <enumerator >NoAnchor</enumerator>
            <enumerator >AnchorViewCenter</enumerator>
            <enumerator >AnchorUnderMouse</enumerator>
        </enum>
        <enum name="QGraphicsView::ViewportUpdateMode">
            <accessPolicy value="public"/>
            <enumerator >FullViewportUpdate</enumerator>
            <enumerator >MinimalViewportUpdate</enumerator>
            <enumerator >SmartViewportUpdate</enumerator>
            <enumerator >NoViewportUpdate</enumerator>
            <enumerator >BoundingRectViewportUpdate</enumerator>
        </enum>
        <enum name="QGraphicsView::CacheModeFlag">
            <accessPolicy value="public"/>
            <enumerator value="0x0">CacheNone</enumerator>
            <enumerator value="0x1">CacheBackground</enumerator>
        </enum>
        <enum name="QGraphicsView::DragMode">
            <accessPolicy value="public"/>
            <enumerator >NoDrag</enumerator>
            <enumerator >ScrollHandDrag</enumerator>
            <enumerator >RubberBandDrag</enumerator>
        </enum>
        <function name="setTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QTransform" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="false" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="render">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QRect()" type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::KeepAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resetCachedContent">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QRectF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="viewportUpdateMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsView::ViewportUpdateMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseReleaseEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setViewportUpdateMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsView::ViewportUpdateMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensureVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensureVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="ensureVisible">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="50" type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsScene" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyPressEvent">
            <modifiers />
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setInteractive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setOptimizationFlag">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsView::OptimizationFlag" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setAlignment">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::Alignment" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mousePressEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setMatrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QMatrix" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="false" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="cacheMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsView::CacheMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="rotate">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="foregroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBrush" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <constructor name="QGraphicsView">
            <modifiers />
            <arguments >
                <argument type="QGraphicsView" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsView">
            <modifiers />
            <arguments >
                <argument type="QGraphicsViewPrivate" indirections="0" isReference="true" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsView">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsScene" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <constructor name="QGraphicsView">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="0" type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
        </constructor>
        <function name="drawItems">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QStyleOptionGraphicsItem" indirections="0" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setRenderHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter::RenderHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygon" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygonF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygon" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygon" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapFromScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPoint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainterPath" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPainterPath" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPolygon" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRect" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPolygonF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mapToScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QPointF" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="updateSceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="renderHints">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QPainter::RenderHints" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawForeground">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="itemAt">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPoint" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="QGraphicsItem" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="viewportTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="optimizationFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsView::OptimizationFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="matrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QMatrix" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="focusInEvent">
            <modifiers />
            <arguments >
                <argument type="QFocusEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="shear">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isTransformed">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resetMatrix">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setRenderHint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPainter::RenderHint" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="true" type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="isInteractive">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="bool" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="alignment">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="Qt::Alignment" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fitInView">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IgnoreAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fitInView">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IgnoreAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="fitInView">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="Qt::IgnoreAspectRatio" type="Qt::AspectRatioMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scale">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseDoubleClickEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="sizeHint">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QSize" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="translate">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="mouseMoveEvent">
            <modifiers />
            <arguments >
                <argument type="QMouseEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="resetTransform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setOptimizationFlags">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsView::OptimizationFlags" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="keyReleaseEvent">
            <modifiers />
            <arguments >
                <argument type="QKeyEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QGraphicsScene" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setCacheMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsView::CacheMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setSceneRect">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="centerOn">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QGraphicsItem" indirections="1" isReference="false" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="centerOn">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="qreal" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="centerOn">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QPointF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setForegroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="drawBackground">
            <accessPolicy value="protected"/>
            <modifiers >
                <virtual />
            </modifiers>
            <arguments >
                <argument type="QPainter" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="invalidateScene">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument default="QRectF()" type="QRectF" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument default="QGraphicsScene::AllLayers" type="QGraphicsScene::SceneLayers" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <function name="transform">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QTransform" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setBackgroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="QBrush" indirections="0" isReference="true" isConstant="true" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="wheelEvent">
            <modifiers />
            <arguments >
                <argument type="QWheelEvent" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="backgroundBrush">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments />
            <return type="QBrush" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="scrollContentsBy">
            <modifiers />
            <arguments >
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
                <argument type="int" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <function name="setRubberBandSelectionMode">
            <accessPolicy value="public"/>
            <modifiers />
            <arguments >
                <argument type="Qt::ItemSelectionMode" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </function>
        <slot name="setupViewport">
            <accessPolicy value="protected"/>
            <modifiers />
            <arguments >
                <argument type="QWidget" indirections="1" isReference="false" isConstant="false" isFunctionPointer="false">
                    <arguments />
                </argument>
            </arguments>
            <return type="void" indirections="0" isReference="false" isConstant="false" isFunctionPointer="false">
                <arguments />
            </return>
        </slot>
        <property name="backgroundBrush">
            <read value="backgroundBrush"/>
            <write value="setBackgroundBrush"/>
        </property>
        <property name="foregroundBrush">
            <read value="foregroundBrush"/>
            <write value="setForegroundBrush"/>
        </property>
        <property name="interactive">
            <read value="isInteractive"/>
            <write value="setInteractive"/>
        </property>
        <property name="sceneRect">
            <read value="sceneRect"/>
            <write value="setSceneRect"/>
        </property>
        <property name="alignment">
            <read value="alignment"/>
            <write value="setAlignment"/>
        </property>
        <property name="renderHints">
            <read value="renderHints"/>
            <write value="setRenderHints"/>
        </property>
        <property name="dragMode">
            <read value="dragMode"/>
            <write value="setDragMode"/>
        </property>
        <property name="cacheMode">
            <read value="cacheMode"/>
            <write value="setCacheMode"/>
        </property>
        <property name="transformationAnchor">
            <read value="transformationAnchor"/>
            <write value="setTransformationAnchor"/>
        </property>
        <property name="resizeAnchor">
            <read value="resizeAnchor"/>
            <write value="setResizeAnchor"/>
        </property>
        <property name="viewportUpdateMode">
            <read value="viewportUpdateMode"/>
            <write value="setViewportUpdateMode"/>
        </property>
        <property name="rubberBandSelectionMode">
            <read value="rubberBandSelectionMode"/>
            <write value="setRubberBandSelectionMode"/>
        </property>
        <property name="optimizationFlags">
            <read value="optimizationFlags"/>
            <write value="setOptimizationFlags"/>
        </property>
    </class>
</code>
