(copy_files ui/Root.qml)

(library
  (name            mystubs)
  (modules)
  (foreign_stubs
    (language cxx)
    (names    qrc_resources)
    (flags    (-O3 -fPIC
               -I/media/oldhome/kakadu/prog/qt/qt_off/5.15.0/gcc_64/include/QtQuick
               -I/media/oldhome/kakadu/prog/qt/qt_off/5.15.0/gcc_64/include/QtCore
               -I/media/oldhome/kakadu/prog/qt/qt_off/5.15.0/gcc_64/include/
               ))
    )
  (install_c_headers controller)
  (flags           (:standard))
)


(executable
  (name        program)
  (libraries   lablqml threads mystubs mystubs_all_cpp)
  (modules     Program )
  (flags       (:standard -w -33-27) )
  ;(preprocess (per_module
  ;             ((pps lablqml.ppx) Controller)) )

  (link_flags  (-ccopt -Wl,-no-as-needed
                -fPIC
                -ccopt -L/home/kakadu/prog/qt/qt_off/5.15.0/gcc_64/lib
                -cclib -lstdc++
                -cclib -llablqml_stubs
                ; By some reason resources are not linked/loaded when places in mystubs
                qrc_resources.o
                ;-cclib -lmystubs_all_cpp_stubs

                (:include ocaml_qt_libs.sexp)

                src/demo1_qmltyperegistrations.o
                src/libmystubs_all_cpp_stubs.a
                -verbose
                ) )
)


(rule
  (targets qrc_resources.cpp)
  (deps    src/resources.qrc ui/Root.qml)
  ; it will be great to have hack to access head of the dependecies (like in Makefile)
  (action  (run rcc -name resources src/resources.qrc -o %{targets})) )



(rule
 (targets  c_flags.sexp
           ocaml_qt_libs.sexp
           dummy_path.sexp
           c_library_flags.sexp)
 (deps    config/discover.exe)
 (action  (run config/discover.exe )) )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(rule
  (targets moc_predefs.h)
  ;(deps    (:include ../dummy_path.sexp))
  ;(deps    (:include ocaml_qt_libs.sexp))
  (deps     /home/kakadu/prog/qt/qt_off/5.15.0/gcc_64/mkspecs/features/data/dummy.cpp)
  ; it will be great to have hack to access head of the dependecies (like in Makefile)
  (action  (run g++ -pipe -g -std=gnu++11 -Wall -Wextra -dM -E %{deps} -o %{targets})) )
